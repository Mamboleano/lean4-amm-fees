{"name":"Mathlib.AlgebraicTopology.SimplicialSet.Basic","instances":[{"typeNames":["SSet"],"name":"SSet.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["SSet"],"name":"SSet.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["SSet"],"name":"SSet.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["CategoryTheory.Adjunction.counit"],"name":"SSet.Truncated.cosk_reflective","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Adjunction.unit"],"name":"SSet.Truncated.sk_coreflective","className":"CategoryTheory.IsIso"},{"typeNames":["SSet.Truncated.cosk"],"name":"SSet.Truncated.cosk.full","className":"CategoryTheory.Functor.Full"},{"typeNames":["SSet.Truncated.cosk"],"name":"SSet.Truncated.cosk.faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["SSet.Truncated.cosk"],"name":"SSet.Truncated.coskAdj.reflective","className":"CategoryTheory.Reflective"},{"typeNames":["SSet.Truncated.sk"],"name":"SSet.Truncated.sk.full","className":"CategoryTheory.Functor.Full"},{"typeNames":["SSet.Truncated.sk"],"name":"SSet.Truncated.sk.faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["SSet.Truncated.sk"],"name":"SSet.Truncated.skAdj.coreflective","className":"CategoryTheory.Coreflective"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialObject.Basic","Mathlib.CategoryTheory.Yoneda","Mathlib.Tactic.FinCases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L244-L247","name":"SSet.σ_naturality_apply","line":244,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.σ_naturality_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.σ_naturality_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">σ_naturality_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">T</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L239-L242","name":"SSet.δ_naturality_apply","line":239,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_naturality_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_naturality_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_naturality_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">T</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L232-L233","name":"SSet.σ_comp_σ_apply","line":232,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.σ_comp_σ_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.σ_comp_σ_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">σ_comp_σ_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L226-L230","name":"SSet.δ_comp_σ_of_gt'_apply","line":226,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_gt'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_gt'_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_of_gt'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castLT\">castLT</a></span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.pred\">pred</a></span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L222-L224","name":"SSet.δ_comp_σ_of_gt_apply","line":222,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_gt_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_gt_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_of_gt_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L219-L220","name":"SSet.δ_comp_σ_succ'_apply","line":219,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_succ'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_succ'_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_succ'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L215-L217","name":"SSet.δ_comp_σ_succ_apply","line":215,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_succ_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_succ_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_succ_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L212-L213","name":"SSet.δ_comp_σ_self'_apply","line":212,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_self'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_self'_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_self'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L208-L210","name":"SSet.δ_comp_σ_self_apply","line":208,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_self_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_self_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_self_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L204-L206","name":"SSet.δ_comp_σ_of_le_apply","line":204,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_le_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_σ_of_le_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_σ_of_le_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.σ\">CategoryTheory.SimplicialObject.σ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L201-L202","name":"SSet.δ_comp_δ_self'_apply","line":201,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_self'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_self'_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_δ_self'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L198-L199","name":"SSet.δ_comp_δ_self_apply","line":198,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_self_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_self_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_δ_self_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L193-L196","name":"SSet.δ_comp_δ''_apply","line":193,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ''_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ''_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_δ''_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castLT\">castLT</a></span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L188-L191","name":"SSet.δ_comp_δ'_apply","line":188,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ'_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_δ'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.pred\">pred</a></span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L185-L186","name":"SSet.δ_comp_δ_apply","line":185,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.δ_comp_δ_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">δ_comp_δ_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>))</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\">j</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L177-L180","name":"SSet.Augmented","line":177,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Augmented","doc":"The category of augmented simplicial sets, as a particular case of\naugmented simplicial objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Augmented\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L170-L171","name":"SSet.Truncated.skAdj.coreflective","line":170,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.skAdj.coreflective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.skAdj.coreflective\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">skAdj</span>.<span class=\"name\">coreflective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Reflective.html#CategoryTheory.Coreflective\">CategoryTheory.Coreflective</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\">Truncated.sk</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L167-L168","name":"SSet.Truncated.sk.faithful","line":167,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.faithful\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">sk</span>.<span class=\"name\">faithful</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\">Truncated.sk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L165-L165","name":"SSet.Truncated.sk.full","line":165,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.full\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">sk</span>.<span class=\"name\">full</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\">Truncated.sk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L161-L163","name":"SSet.Truncated.sk.fullyFaithful","line":161,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.fullyFaithful","doc":"Since `Truncated.inclusion` is fully faithful, so is left Kan extension along it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk.fullyFaithful\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">sk</span>.<span class=\"name\">fullyFaithful</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\">Truncated.sk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L158-L159","name":"SSet.Truncated.coskAdj.reflective","line":158,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.coskAdj.reflective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.coskAdj.reflective\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">coskAdj</span>.<span class=\"name\">reflective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Reflective.html#CategoryTheory.Reflective\">CategoryTheory.Reflective</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\">Truncated.cosk</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L155-L156","name":"SSet.Truncated.cosk.faithful","line":155,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.faithful\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">cosk</span>.<span class=\"name\">faithful</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\">Truncated.cosk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L152-L153","name":"SSet.Truncated.cosk.full","line":152,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.full\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">cosk</span>.<span class=\"name\">full</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\">Truncated.cosk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L147-L150","name":"SSet.Truncated.cosk.fullyFaithful","line":147,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.fullyFaithful","doc":"Since `Truncated.inclusion` is fully faithful, so is right Kan extension along it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk.fullyFaithful\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">cosk</span>.<span class=\"name\">fullyFaithful</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\">Truncated.cosk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L144-L145","name":"SSet.Truncated.sk_coreflective","line":144,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk_coreflective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk_coreflective\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">sk_coreflective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.skAdj\">skAdj</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.unit\">unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L141-L142","name":"SSet.Truncated.cosk_reflective","line":141,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk_reflective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk_reflective\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">cosk_reflective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.coskAdj\">coskAdj</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.counit\">counit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L135-L137","name":"SSet.coskAdj","line":135,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.coskAdj","doc":"The adjunction between n-truncation and the n-coskeleton. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.coskAdj\"><span class=\"name\">SSet</span>.<span class=\"name\">coskAdj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\">Truncated.cosk</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L131-L133","name":"SSet.skAdj","line":131,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.skAdj","doc":"The adjunction between the n-skeleton and n-truncation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.skAdj\"><span class=\"name\">SSet</span>.<span class=\"name\">skAdj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\">Truncated.sk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L124-L125","name":"SSet.cosk","line":124,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.cosk","doc":"The n-coskeleton as an endofunctor on `SSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.cosk\"><span class=\"name\">SSet</span>.<span class=\"name\">cosk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L121-L122","name":"SSet.sk","line":121,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.sk","doc":"The n-skeleton as an endofunctor on `SSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.sk\"><span class=\"name\">SSet</span>.<span class=\"name\">sk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L117-L119","name":"SSet.Truncated.cosk","line":117,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk","doc":"The n-coskeleton as a functor `SSet.Truncated n ⥤ SSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.cosk\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">cosk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L113-L115","name":"SSet.Truncated.sk","line":113,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk","doc":"The n-skeleton as a functor `SSet.Truncated n ⥤ SSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.sk\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">sk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L106-L107","name":"SSet.truncation","line":106,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation","doc":"The truncation functor on simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\"><span class=\"name\">SSet</span>.<span class=\"name\">truncation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L101-L101","name":"SSet.Truncated.hom_ext","line":101,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">n_1</span> : <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">SimplexCategory.Truncated</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n_1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L96-L99","name":"SSet.Truncated.uliftFunctor","line":96,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.uliftFunctor","doc":"The ulift functor `SSet.Truncated.{u} ⥤ SSet.Truncated.{max u v}` on truncated\nsimplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.uliftFunctor\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">uliftFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L92-L94","name":"SSet.Truncated.hasColimits","line":92,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hasColimits\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L88-L90","name":"SSet.Truncated.hasLimits","line":88,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.hasLimits\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L84-L86","name":"SSet.Truncated.largeCategory","line":84,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated.largeCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L80-L82","name":"SSet.Truncated","line":80,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated","doc":"Truncated simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L76-L78","name":"SSet.uliftFunctor","line":76,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.uliftFunctor","doc":"The ulift functor `SSet.{u} ⥤ SSet.{max u v}` on simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.uliftFunctor\"><span class=\"name\">SSet</span>.<span class=\"name\">uliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L70-L74","name":"SSet.const_comp","line":70,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const_comp\"><span class=\"name\">SSet</span>.<span class=\"name\">const_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\">const</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\">const</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L66-L68","name":"SSet.comp_const","line":66,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.comp_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.comp_const\"><span class=\"name\">SSet</span>.<span class=\"name\">comp_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\">const</a> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\">const</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L57-L57","name":"SSet.const_app","line":57,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const_app\"><span class=\"name\">SSet</span>.<span class=\"name\">const_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\">const</a> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.const\">const</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L56-L64","name":"SSet.const","line":56,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const","doc":"The constant map of simplicial sets `X ⟶ Y` induced by a simplex `y : Y _[0]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.const\"><span class=\"name\">SSet</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L52-L54","name":"SSet.comp_app","line":52,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.comp_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.comp_app\"><span class=\"name\">SSet</span>.<span class=\"name\">comp_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L48-L48","name":"SSet.hom_ext","line":48,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L44-L46","name":"SSet.hasColimits","line":44,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hasColimits\"><span class=\"name\">SSet</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L40-L42","name":"SSet.hasLimits","line":40,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.hasLimits\"><span class=\"name\">SSet</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L36-L38","name":"SSet.largeCategory","line":36,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.largeCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean#L28-L32","name":"SSet","line":28,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet","doc":"The category of simplicial sets.\nThis is the category of contravariant functors from\n`SimplexCategory` to `Type u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\"><span class=\"name\">SSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}