{"name":"Lean.Elab.MutualDef","instances":[{"typeNames":["Lean.Elab.DefViewElabHeader"],"name":"Lean.Elab.instInhabitedDefViewElabHeader","className":"Inhabited"}],"imports":["Lean.Parser.Term","Lean.Meta.Closure","Lean.Meta.Check","Lean.Meta.Transform","Lean.PrettyPrinter.Delaborator.Options","Lean.Elab.Command","Lean.Elab.Match","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition.TerminationHint","Lean.Elab.DeclarationRange"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L1066-L1107","name":"Lean.Elab.Command.elabMutualDef","line":1066,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L1054-L1061","name":"Lean.Elab.Term.elabMutualDef.processDeriving","line":1054,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span>.<span class=\"name\">processDeriving</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">views</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">headers</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L1013-L1051","name":"Lean.Elab.Term.elabMutualDef.go","line":1013,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sc</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Command.Scope</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">views</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L1004-L1061","name":"Lean.Elab.Term.elabMutualDef","line":1004,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sc</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Command.Scope</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">views</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L930-L963","name":"Lean.Elab.Term.MutualClosure.main","line":930,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFVars </span><span class=\"fn\">mainVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecsToLift</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L924-L928","name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","line":924,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getModifiersForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L920-L922","name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","line":920,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getKindForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L897-L918","name":"Lean.Elab.Term.MutualClosure.pushLetRecs","line":897,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecClosures</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">DefKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L877-L895","name":"Lean.Elab.Term.MutualClosure.pushMain","line":877,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushMain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L865-L875","name":"Lean.Elab.Term.MutualClosure.Replacement.apply","line":865,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L856-L863","name":"Lean.Elab.Term.MutualClosure.isApplicable","line":856,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.isApplicable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.isApplicable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">isApplicable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L852-L854","name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","line":852,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecClosures</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L847-L849","name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","line":847,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForMainFns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L844-L845","name":"Lean.Elab.Term.MutualClosure.Replacement","line":844,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L788-L788","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","line":788,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">toLift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L787-L787","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.closed","line":787,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed","doc":"Expression used to replace occurrences of the let-rec `FVarId`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">closed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L785-L785","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","line":785,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L784-L784","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.ref","line":784,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L783-L783","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.mk","line":783,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLift</span> : <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L783-L788","name":"Lean.Elab.Term.MutualClosure.LetRecClosure","line":783,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L719-L719","name":"Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","line":719,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">exprArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L718-L718","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","line":718,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLetDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L717-L717","name":"Lean.Elab.Term.MutualClosure.ClosureState.localDecls","line":717,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L716-L716","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","line":716,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLocalDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L715-L715","name":"Lean.Elab.Term.MutualClosure.ClosureState.mk","line":715,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newLocalDecls </span><span class=\"fn\">localDecls </span><span class=\"fn\">newLetDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L715-L719","name":"Lean.Elab.Term.MutualClosure.ClosureState","line":715,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L695-L695","name":"Lean.Elab.Term.MutualClosure.FreeVarMap","line":695,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FreeVarMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L689-L691","name":"Lean.Elab.Term.MutualClosure.FixPoint.run","line":689,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecFVarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usedFVarsMap</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L647-L647","name":"Lean.Elab.Term.MutualClosure.FixPoint.M","line":647,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L645-L645","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.modified","line":645,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L644-L644","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","line":644,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">usedFVarsMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L643-L643","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.mk","line":643,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usedFVarsMap</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modified</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L643-L645","name":"Lean.Elab.Term.MutualClosure.FixPoint.State","line":643,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L552-L553","name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","line":552,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","doc":"A mapping from FVarId to Set of FVarIds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">UsedFVarsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L407-L411","name":"Lean.Elab.Term.debug.proofAsSorry","line":407,"kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.debug.proofAsSorry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.debug.proofAsSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">debug</span>.<span class=\"name\">proofAsSorry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L402-L405","name":"Lean.Elab.Term.linter.unusedSectionVars","line":402,"kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.linter.unusedSectionVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.linter.unusedSectionVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">linter</span>.<span class=\"name\">unusedSectionVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L397-L400","name":"Lean.Elab.Term.deprecated.oldSectionVars","line":397,"kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.deprecated.oldSectionVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.deprecated.oldSectionVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">deprecated</span>.<span class=\"name\">oldSectionVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L49-L49","name":"Lean.Elab.instInhabitedDefViewElabHeader","line":49,"kind":"instance","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefViewElabHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L48-L48","name":"Lean.Elab.DefViewElabHeader.bodySnap?","line":48,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?","doc":"Snapshot for incremental processing of definition body.\n\nInvariant: if the bundle's `old?` is set, then elaboration of the body is guaranteed to result in\nthe same elaboration result and state, i.e. reuse is possible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">bodySnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">BodyProcessedSnapshot</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L41-L41","name":"Lean.Elab.DefViewElabHeader.tacSnap?","line":41,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?","doc":"Snapshot for incremental processing of top-level tactic block, if any.\n\nInvariant: if the bundle's `old?` is set, then the state *up to the start* of the tactic block is\nunchanged, i.e. reuse is possible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">tacSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Tactic.TacticParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L34-L34","name":"Lean.Elab.DefViewElabHeader.mk","line":34,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDefView</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDefViewElabHeaderData</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">DefViewElabHeaderData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacSnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Tactic.TacticParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bodySnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">BodyProcessedSnapshot</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L34-L49","name":"Lean.Elab.DefViewElabHeader.toDefView","line":34,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">toDefView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L34-L49","name":"Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData","line":34,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">toDefViewElabHeaderData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">DefViewElabHeaderData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L33-L49","name":"Lean.Elab.DefViewElabHeader","line":33,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","doc":"`DefView` plus header elaboration data and snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>, <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">Lean.Elab.DefViewElabHeaderData</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/MutualDef.lean#L28-L31","name":"Lean.Elab.instantiateMVarsProfiling","line":28,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instantiateMVarsProfiling","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.instantiateMVarsProfiling\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instantiateMVarsProfiling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"}]}