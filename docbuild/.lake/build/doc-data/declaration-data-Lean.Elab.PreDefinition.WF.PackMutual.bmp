{"name":"Lean.Elab.PreDefinition.WF.PackMutual","instances":[],"imports":["Lean.Meta.ArgsPacker","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.WF.Eqns"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L116-L127","name":"Lean.Elab.WF.preDefsFromUnaryNonRec","line":116,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.preDefsFromUnaryNonRec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.preDefsFromUnaryNonRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">preDefsFromUnaryNonRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedPrefixSize</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argsPacker</span> : <a href=\"./Lean/Meta/ArgsPacker/Basic.html#Lean.Meta.ArgsPacker\">Meta.ArgsPacker</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unaryPreDefNonRec</span> : <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L97-L113","name":"Lean.Elab.WF.varyingVarNames","line":97,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.varyingVarNames","doc":"Collect the names of the varying variables (after the fixed prefix); this also determines the\narity for the well-founded translations, and is turned into an `ArgsPacker`.\nWe use the term to determine the arity, but take the name from the type, for better names in the\n```\nfun : (n : Nat) → Nat | 0 => 0 | n+1 => fun n\n```\nidiom.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.varyingVarNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">varyingVarNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedPrefixSize</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDef</span> : <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L69-L95","name":"Lean.Elab.WF.packMutual","line":69,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packMutual","doc":"Creates a single unary function from the given `preDefs`, using the machinery in the `ArgPacker`\nmodule.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packMutual\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packMutual</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedPrefix</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argsPacker</span> : <a href=\"./Lean/Meta/ArgsPacker/Basic.html#Lean.Meta.ArgsPacker\">Meta.ArgsPacker</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L60-L67","name":"Lean.Elab.WF.mutualName","line":60,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.mutualName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.mutualName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">mutualName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argsPacker</span> : <a href=\"./Lean/Meta/ArgsPacker/Basic.html#Lean.Meta.ArgsPacker\">Meta.ArgsPacker</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L38-L58","name":"Lean.Elab.WF.packCalls","line":38,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packCalls","doc":"Processes the expression and replaces calls to  the `preDefs` with calls to `f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packCalls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packCalls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedPrefix</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argsPacker</span> : <a href=\"./Lean/Meta/ArgsPacker/Basic.html#Lean.Meta.ArgsPacker\">Meta.ArgsPacker</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newF </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L19-L36","name":"Lean.Elab.WF.withAppN","line":19,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withAppN","doc":"Pass the first `n` arguments of `e` to the continuation, and apply the result to the\nremaining arguments. If `e` does not have enough arguments, it is eta-expanded as needed.\n\nUnlike `Meta.etaExpand` does not use `withDefault`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withAppN\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">withAppN</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"}]}