{"name":"Init.Grind.Tactics","instances":[{"typeNames":["Lean.Grind.Config"],"name":"Lean.Grind.instInhabitedConfig","className":"Inhabited"},{"typeNames":["Lean.Grind.Config"],"name":"Lean.Grind.instBEqConfig","className":"BEq"}],"imports":["Init.Tactics"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L92-L95","name":"Lean.Parser.Tactic.grindTrace","line":92,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindTrace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L86-L89","name":"Lean.Parser.Tactic.grind","line":86,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L84-L84","name":"Lean.Parser.Tactic.grindParam","line":84,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindParam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L83-L83","name":"Lean.Parser.Tactic.grindLemma","line":83,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L82-L82","name":"Lean.Parser.Tactic.grindErase","line":82,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Tactic.grindErase\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindErase</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L72-L72","name":"Lean.Grind.instBEqConfig","line":72,"kind":"instance","docLink":"./Init/Grind/Tactics.html#Lean.Grind.instBEqConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.instBEqConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instBEqConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L72-L72","name":"Lean.Grind.instInhabitedConfig","line":72,"kind":"instance","docLink":"./Init/Grind/Tactics.html#Lean.Grind.instInhabitedConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.instInhabitedConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L71-L71","name":"Lean.Grind.Config.clean","line":71,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.clean","doc":"If `clean` is `true`, `grind` uses `expose_names` and only generates accessible names. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.clean\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">clean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L69-L69","name":"Lean.Grind.Config.verbose","line":69,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.verbose","doc":"If `verbose` is `false`, additional diagnostics information is not collected. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.verbose\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">verbose</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L67-L67","name":"Lean.Grind.Config.ext","line":67,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.ext","doc":"If `ext` is `true`, `grind` uses extensionality theorems available in the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L65-L65","name":"Lean.Grind.Config.canonHeartbeats","line":65,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.canonHeartbeats","doc":"Maximum number of heartbeats (in thousands) the canonicalizer can spend per definitional equality test. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.canonHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">canonHeartbeats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L63-L63","name":"Lean.Grind.Config.failures","line":63,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.failures","doc":"By default, `grind` halts as soon as it encounters a sub-goal where no further progress can be made. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.failures\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">failures</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L61-L61","name":"Lean.Grind.Config.splitIndPred","line":61,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.splitIndPred","doc":"If `splitIndPred` is `true`, `grind` performs case-splitting on inductive predicates.\nOtherwise, it performs case-splitting only on types marked with `[grind cases]` attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.splitIndPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">splitIndPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L57-L57","name":"Lean.Grind.Config.splitIte","line":57,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.splitIte","doc":"If `splitIte` is `true`, `grind` performs case-splitting on `if-then-else` expressions during the search. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.splitIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">splitIte</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L55-L55","name":"Lean.Grind.Config.splitMatch","line":55,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.splitMatch","doc":"If `splitMatch` is `true`, `grind` performs case-splitting on `match`-expressions during the search. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.splitMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">splitMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L53-L53","name":"Lean.Grind.Config.matchEqs","line":53,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.matchEqs","doc":"If `matchEqs` is `true`, `grind` uses `match`-equations as E-matching theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.matchEqs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">matchEqs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L51-L51","name":"Lean.Grind.Config.instances","line":51,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.instances","doc":"Maximum number of theorem instances generated using E-matching in a proof search tree branch. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.instances\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">instances</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L49-L49","name":"Lean.Grind.Config.gen","line":49,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.gen","doc":"Maximum term generation.\nThe input goal terms have generation 0. When we instantiate a theorem using a term from generation `n`,\nthe new terms have generation `n+1`. Thus, this parameter limits the length of an instantiation chain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.gen\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">gen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L44-L44","name":"Lean.Grind.Config.ematch","line":44,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.ematch","doc":"Maximum number of E-matching (aka heuristic theorem instantiation) rounds before each case split. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.ematch\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">ematch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L42-L42","name":"Lean.Grind.Config.splits","line":42,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.splits","doc":"Maximum number of case-splits in a proof search branch. It does not include splits performed during normalization. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.splits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">splits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L40-L40","name":"Lean.Grind.Config.trace","line":40,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.trace","doc":"If `trace` is `true`, `grind` records used E-matching theorems and case-splits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.trace\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L38-L38","name":"Lean.Grind.Config.mk","line":38,"kind":"ctor","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trace</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">splits </span><span class=\"fn\">ematch </span><span class=\"fn\">gen </span><span class=\"fn\">instances</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">matchEqs </span><span class=\"fn\">splitMatch </span><span class=\"fn\">splitIte </span><span class=\"fn\">splitIndPred</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">failures </span><span class=\"fn\">canonHeartbeats</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext </span><span class=\"fn\">verbose </span><span class=\"fn\">clean</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L34-L72","name":"Lean.Grind.Config","line":34,"kind":"structure","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config","doc":"The configuration for `grind`.\nPassed to `grind` using, for example, the `grind (config := { matchEqs := true })` syntax.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L29-L29","name":"Lean.Parser.Attr.grind","line":29,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L28-L28","name":"Lean.Parser.Attr.grindMod","line":28,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindMod\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L27-L27","name":"Lean.Parser.Attr.grindIntro","line":27,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindIntro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindIntro\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindIntro</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L26-L26","name":"Lean.Parser.Attr.grindCasesEager","line":26,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindCasesEager","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindCasesEager\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindCasesEager</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L25-L25","name":"Lean.Parser.Attr.grindCases","line":25,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindCases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindCases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L24-L24","name":"Lean.Parser.Attr.grindUsr","line":24,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindUsr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindUsr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindUsr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L23-L23","name":"Lean.Parser.Attr.grindLR","line":23,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindLR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindLR\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindLR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L22-L22","name":"Lean.Parser.Attr.grindRL","line":22,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindRL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindRL\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindRL</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L21-L21","name":"Lean.Parser.Attr.grindFwd","line":21,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindFwd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindFwd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindFwd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L20-L20","name":"Lean.Parser.Attr.grindBwd","line":20,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindBwd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindBwd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindBwd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L19-L19","name":"Lean.Parser.Attr.grindEqBwd","line":19,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqBwd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqBwd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindEqBwd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L18-L18","name":"Lean.Parser.Attr.grindEqRhs","line":18,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqRhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqRhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindEqRhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L17-L17","name":"Lean.Parser.Attr.grindEqBoth","line":17,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqBoth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEqBoth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindEqBoth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L16-L16","name":"Lean.Parser.Attr.grindEq","line":16,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.Attr.grindEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Attr</span>.<span class=\"name\">grindEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Grind/Tactics.lean#L10-L13","name":"Lean.Parser.resetGrindAttrs","line":10,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Parser.resetGrindAttrs","doc":"Reset all `grind` attributes. This command is intended for testing purposes only and should not be used in applications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Parser.resetGrindAttrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resetGrindAttrs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"}]}