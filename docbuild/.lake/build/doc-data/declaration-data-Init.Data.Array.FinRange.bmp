{"name":"Init.Data.Array.FinRange","instances":[],"imports":["Init.Data.List.FinRange","Init.Data.Array.OfFn"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L44-L48","name":"Array.finRange_reverse","line":44,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.finRange_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.finRange_reverse\"><span class=\"name\">Array</span>.<span class=\"name\">finRange_reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/Array/Basic.html#Array.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Array/Basic.html#Array.map\">map</a> <a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">Fin.rev</a> <span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L34-L42","name":"Array.finRange_succ_last","line":34,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.finRange_succ_last","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.finRange_succ_last\"><span class=\"name\">Array</span>.<span class=\"name\">finRange_succ_last</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Array/Basic.html#Array.map\">map</a> <a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.toArray\">#[</a><span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#List.toArray\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L27-L32","name":"Array.finRange_succ","line":27,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.finRange_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.finRange_succ\"><span class=\"name\">Array</span>.<span class=\"name\">finRange_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.toArray\">#[</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#List.toArray\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/Array/Basic.html#Array.map\">map</a> <a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L25-L25","name":"Array.finRange_zero","line":25,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.finRange_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.finRange_zero\"><span class=\"name\">Array</span>.<span class=\"name\">finRange_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L21-L23","name":"Array.getElem_finRange","line":21,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.getElem_finRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.getElem_finRange\"><span class=\"name\">Array</span>.<span class=\"name\">getElem_finRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.cast\">Fin.cast</a> <span class=\"fn\">⋯</span> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">h</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L18-L19","name":"Array.size_finRange","line":18,"kind":"theorem","docLink":"./Init/Data/Array/FinRange.html#Array.size_finRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.size_finRange\"><span class=\"name\">Array</span>.<span class=\"name\">size_finRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Array/FinRange.html#Array.finRange\">Array.finRange</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Array/FinRange.lean#L15-L16","name":"Array.finRange","line":15,"kind":"def","docLink":"./Init/Data/Array/FinRange.html#Array.finRange","doc":"`finRange n` is the array of all elements of `Fin n` in order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Array/FinRange.html#Array.finRange\"><span class=\"name\">Array</span>.<span class=\"name\">finRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>"}]}