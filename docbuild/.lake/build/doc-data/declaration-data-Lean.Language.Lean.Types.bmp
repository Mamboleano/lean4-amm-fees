{"name":"Lean.Language.Lean.Types","instances":[{"typeNames":["Lean.Language.Lean.CommandFinishedSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandFinishedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderProcessedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","className":"Lean.Language.ToSnapshotTree"}],"imports":["Lean.Language.Basic","Lean.Elab.Command"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L104-L105","name":"Lean.Language.Lean.InitialSnapshot","line":104,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot","doc":"Initial snapshot of the Lean language processor: a \"header parsed\" snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">InitialSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L99-L102","name":"Lean.Language.Lean.HeaderParsedSnapshot.processedResult","line":99,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult","doc":"Shortcut accessor to the final header state, if successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">processedResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L95-L97","name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","line":95,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L92-L92","name":"Lean.Language.Lean.HeaderParsedSnapshot.result?","line":92,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?","doc":"State after successful parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L90-L90","name":"Lean.Language.Lean.HeaderParsedSnapshot.stx","line":90,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx","doc":"Resulting syntax tree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L88-L88","name":"Lean.Language.Lean.HeaderParsedSnapshot.ictx","line":88,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx","doc":"Parser input context supplied by the driver, stored here for incremental parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">ictx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L86-L86","name":"Lean.Language.Lean.HeaderParsedSnapshot.mk","line":86,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ictx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L86-L93","name":"Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","line":86,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L85-L93","name":"Lean.Language.Lean.HeaderParsedSnapshot","line":85,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot","doc":"State after the module header has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L83-L83","name":"Lean.Language.Lean.HeaderParsedState.processedSnap","line":83,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap","doc":"Header processing task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">processedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L81-L81","name":"Lean.Language.Lean.HeaderParsedState.parserState","line":81,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L79-L79","name":"Lean.Language.Lean.HeaderParsedState.mk","line":79,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">processedSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L78-L83","name":"Lean.Language.Lean.HeaderParsedState","line":78,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState","doc":"State after successfully parsing the module header. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L74-L76","name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","line":74,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderProcessedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L72-L72","name":"Lean.Language.Lean.HeaderProcessedSnapshot.result?","line":72,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L70-L70","name":"Lean.Language.Lean.HeaderProcessedSnapshot.mk","line":70,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L70-L73","name":"Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","line":70,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L69-L73","name":"Lean.Language.Lean.HeaderProcessedSnapshot","line":69,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot","doc":"State after the module header has been processed including imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L67-L67","name":"Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","line":67,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","doc":"First command task (there is always at least a terminal command). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">firstCmdSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L65-L65","name":"Lean.Language.Lean.HeaderProcessedState.cmdState","line":65,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState","doc":"The resulting initial elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L63-L63","name":"Lean.Language.Lean.HeaderProcessedState.mk","line":63,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">firstCmdSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L62-L67","name":"Lean.Language.Lean.HeaderProcessedState","line":62,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L56-L60","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","line":56,"kind":"opaque","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L54-L60","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","line":54,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L53-L53","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","line":53,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L52-L52","name":"Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","line":52,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","doc":"Next command, unless this is a terminal command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">nextCmdSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L50-L50","name":"Lean.Language.Lean.CommandParsedSnapshot.reportSnap","line":50,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.reportSnap","doc":"Additional, untyped snapshots used for reporting, not reuse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.reportSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">reportSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L48-L48","name":"Lean.Language.Lean.CommandParsedSnapshot.finishedSnap","line":48,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.finishedSnap","doc":"State after processing is finished. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.finishedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">finishedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L46-L46","name":"Lean.Language.Lean.CommandParsedSnapshot.elabSnap","line":46,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap","doc":"Snapshot for incremental reporting and reuse during elaboration, type dependent on specific\nelaborator.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L41-L41","name":"Lean.Language.Lean.CommandParsedSnapshot.parserState","line":41,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L39-L39","name":"Lean.Language.Lean.CommandParsedSnapshot.stx","line":39,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx","doc":"Syntax tree of the command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L37-L37","name":"Lean.Language.Lean.CommandParsedSnapshot.mk","line":37,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elabSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finishedSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextCmdSnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L37-L53","name":"Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","line":37,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L36-L53","name":"Lean.Language.Lean.CommandParsedSnapshot","line":36,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot","doc":"State after a command has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L33-L34","name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","line":33,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L32-L32","name":"Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","line":32,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L31-L31","name":"Lean.Language.Lean.CommandFinishedSnapshot.cmdState","line":31,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState","doc":"Resulting elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L29-L29","name":"Lean.Language.Lean.CommandFinishedSnapshot.mk","line":29,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L29-L32","name":"Lean.Language.Lean.CommandFinishedSnapshot.toSnapshot","line":29,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">CommandFinishedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Language/Lean/Types.lean#L28-L32","name":"Lean.Language.Lean.CommandFinishedSnapshot","line":28,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot","doc":"Snapshot after elaboration of the entire command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}