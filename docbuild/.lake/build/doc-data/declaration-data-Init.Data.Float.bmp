{"name":"Init.Data.Float","instances":[{"typeNames":["Float"],"name":"instNonemptyFloat","className":"Nonempty"},{"typeNames":["Float"],"name":"instAddFloat","className":"Add"},{"typeNames":["Float"],"name":"instSubFloat","className":"Sub"},{"typeNames":["Float"],"name":"instMulFloat","className":"Mul"},{"typeNames":["Float"],"name":"instDivFloat","className":"Div"},{"typeNames":["Float"],"name":"instNegFloat","className":"Neg"},{"typeNames":["Float"],"name":"instLTFloat","className":"LT"},{"typeNames":["Float"],"name":"instLEFloat","className":"LE"},{"typeNames":["Float"],"name":"instBEqFloat","className":"BEq"},{"typeNames":["LT.lt"],"name":"floatDecLt","className":"Decidable"},{"typeNames":["LE.le"],"name":"floatDecLe","className":"Decidable"},{"typeNames":["Float"],"name":"instToStringFloat","className":"ToString"},{"typeNames":["Float"],"name":"instInhabitedFloat","className":"Inhabited"},{"typeNames":["Float"],"name":"instReprFloat","className":"Repr"},{"typeNames":["Float"],"name":"instReprAtomFloat","className":"ReprAtom"},{"typeNames":["Float"],"name":"instHomogeneousPowFloat","className":"HomogeneousPow"},{"typeNames":["Float"],"name":"instMinFloat","className":"Min"},{"typeNames":["Float"],"name":"instMaxFloat","className":"Max"}],"imports":["Init.Core","Init.Data.Int.Basic","Init.Data.ToString.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L194-L198","name":"Float.scaleB","line":194,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.scaleB","doc":"Efficiently computes `x * 2^i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.scaleB\"><span class=\"name\">Float</span>.<span class=\"name\">scaleB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L192-L192","name":"instMaxFloat","line":192,"kind":"instance","docLink":"./Init/Data/Float.html#instMaxFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instMaxFloat\"><span class=\"name\">instMaxFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L190-L190","name":"instMinFloat","line":190,"kind":"instance","docLink":"./Init/Data/Float.html#instMinFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instMinFloat\"><span class=\"name\">instMinFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L188-L188","name":"instHomogeneousPowFloat","line":188,"kind":"instance","docLink":"./Init/Data/Float.html#instHomogeneousPowFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instHomogeneousPowFloat\"><span class=\"name\">instHomogeneousPowFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HomogeneousPow\">HomogeneousPow</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L186-L186","name":"Float.abs","line":186,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.abs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.abs\"><span class=\"name\">Float</span>.<span class=\"name\">abs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L185-L185","name":"Float.round","line":185,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.round","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.round\"><span class=\"name\">Float</span>.<span class=\"name\">round</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L184-L184","name":"Float.floor","line":184,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.floor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.floor\"><span class=\"name\">Float</span>.<span class=\"name\">floor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L183-L183","name":"Float.ceil","line":183,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.ceil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.ceil\"><span class=\"name\">Float</span>.<span class=\"name\">ceil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L182-L182","name":"Float.cbrt","line":182,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.cbrt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.cbrt\"><span class=\"name\">Float</span>.<span class=\"name\">cbrt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L181-L181","name":"Float.sqrt","line":181,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.sqrt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.sqrt\"><span class=\"name\">Float</span>.<span class=\"name\">sqrt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L180-L180","name":"Float.pow","line":180,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.pow\"><span class=\"name\">Float</span>.<span class=\"name\">pow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L179-L179","name":"Float.log10","line":179,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.log10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.log10\"><span class=\"name\">Float</span>.<span class=\"name\">log10</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L178-L178","name":"Float.log2","line":178,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.log2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.log2\"><span class=\"name\">Float</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L177-L177","name":"Float.log","line":177,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.log","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.log\"><span class=\"name\">Float</span>.<span class=\"name\">log</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L176-L176","name":"Float.exp2","line":176,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.exp2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.exp2\"><span class=\"name\">Float</span>.<span class=\"name\">exp2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L175-L175","name":"Float.exp","line":175,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.exp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.exp\"><span class=\"name\">Float</span>.<span class=\"name\">exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L174-L174","name":"Float.atanh","line":174,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.atanh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.atanh\"><span class=\"name\">Float</span>.<span class=\"name\">atanh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L173-L173","name":"Float.acosh","line":173,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.acosh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.acosh\"><span class=\"name\">Float</span>.<span class=\"name\">acosh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L172-L172","name":"Float.asinh","line":172,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.asinh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.asinh\"><span class=\"name\">Float</span>.<span class=\"name\">asinh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L171-L171","name":"Float.tanh","line":171,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.tanh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.tanh\"><span class=\"name\">Float</span>.<span class=\"name\">tanh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L170-L170","name":"Float.cosh","line":170,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.cosh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.cosh\"><span class=\"name\">Float</span>.<span class=\"name\">cosh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L169-L169","name":"Float.sinh","line":169,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.sinh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.sinh\"><span class=\"name\">Float</span>.<span class=\"name\">sinh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L168-L168","name":"Float.atan2","line":168,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.atan2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.atan2\"><span class=\"name\">Float</span>.<span class=\"name\">atan2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L167-L167","name":"Float.atan","line":167,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.atan","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.atan\"><span class=\"name\">Float</span>.<span class=\"name\">atan</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L166-L166","name":"Float.acos","line":166,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.acos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.acos\"><span class=\"name\">Float</span>.<span class=\"name\">acos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L165-L165","name":"Float.asin","line":165,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.asin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.asin\"><span class=\"name\">Float</span>.<span class=\"name\">asin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L164-L164","name":"Float.tan","line":164,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.tan","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.tan\"><span class=\"name\">Float</span>.<span class=\"name\">tan</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L163-L163","name":"Float.cos","line":163,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.cos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.cos\"><span class=\"name\">Float</span>.<span class=\"name\">cos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L162-L162","name":"Float.sin","line":162,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.sin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.sin\"><span class=\"name\">Float</span>.<span class=\"name\">sin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L160-L160","name":"instReprAtomFloat","line":160,"kind":"instance","docLink":"./Init/Data/Float.html#instReprAtomFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instReprAtomFloat\"><span class=\"name\">instReprAtomFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#ReprAtom\">ReprAtom</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L157-L158","name":"instReprFloat","line":157,"kind":"instance","docLink":"./Init/Data/Float.html#instReprFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instReprFloat\"><span class=\"name\">instReprFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L154-L155","name":"instInhabitedFloat","line":154,"kind":"instance","docLink":"./Init/Data/Float.html#instInhabitedFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instInhabitedFloat\"><span class=\"name\">instInhabitedFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L148-L152","name":"USize.toFloat","line":148,"kind":"opaque","docLink":"./Init/Data/Float.html#USize.toFloat","doc":"Obtains a `Float` whose value is near the given `USize`. It will be exactly the value of the\ngiven `USize` if such a `Float` exists. If no such `Float` exists, the returned value will either\nbe the smallest `Float` this is larger than the given value, or the largest `Float` this is smaller\nthan the given value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#USize.toFloat\"><span class=\"name\">USize</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L143-L147","name":"UInt64.toFloat","line":143,"kind":"opaque","docLink":"./Init/Data/Float.html#UInt64.toFloat","doc":"Obtains a `Float` whose value is near the given `UInt64`. It will be exactly the value of the\ngiven `UInt64` if such a `Float` exists. If no such `Float` exists, the returned value will either\nbe the smallest `Float` this is larger than the given value, or the largest `Float` this is smaller\nthan the given value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#UInt64.toFloat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L141-L142","name":"UInt32.toFloat","line":141,"kind":"opaque","docLink":"./Init/Data/Float.html#UInt32.toFloat","doc":"Obtains the `Float` whose value is the same as the given `UInt32`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#UInt32.toFloat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L139-L140","name":"UInt16.toFloat","line":139,"kind":"opaque","docLink":"./Init/Data/Float.html#UInt16.toFloat","doc":"Obtains the `Float` whose value is the same as the given `UInt16`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#UInt16.toFloat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L137-L138","name":"UInt8.toFloat","line":137,"kind":"opaque","docLink":"./Init/Data/Float.html#UInt8.toFloat","doc":"Obtains the `Float` whose value is the same as the given `UInt8`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#UInt8.toFloat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L134-L135","name":"instToStringFloat","line":134,"kind":"instance","docLink":"./Init/Data/Float.html#instToStringFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instToStringFloat\"><span class=\"name\">instToStringFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L128-L132","name":"Float.frExp","line":128,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.frExp","doc":"Splits the given float `x` into a significand/exponent pair `(s, i)`\nsuch that `x = s * 2^i` where `s ∈ (-1;-0.5] ∪ [0.5; 1)`.\nReturns an undefined value if `x` is not finite.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.frExp\"><span class=\"name\">Float</span>.<span class=\"name\">frExp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L127-L127","name":"Float.isInf","line":127,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.isInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.isInf\"><span class=\"name\">Float</span>.<span class=\"name\">isInf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L126-L126","name":"Float.isFinite","line":126,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.isFinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.isFinite\"><span class=\"name\">Float</span>.<span class=\"name\">isFinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L125-L125","name":"Float.isNaN","line":125,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.isNaN","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.isNaN\"><span class=\"name\">Float</span>.<span class=\"name\">isNaN</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L118-L123","name":"Float.toUSize","line":118,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toUSize","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `USize` (including Inf), returns the maximum value of `USize`\n(i.e. `USize.size - 1`). This value is platform dependent).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toUSize\"><span class=\"name\">Float</span>.<span class=\"name\">toUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L112-L117","name":"Float.toUInt64","line":112,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toUInt64","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt64` (including Inf), returns the maximum value of `UInt64`\n(i.e. `UInt64.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toUInt64\"><span class=\"name\">Float</span>.<span class=\"name\">toUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L106-L111","name":"Float.toUInt32","line":106,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toUInt32","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt32` (including Inf), returns the maximum value of `UInt32`\n(i.e. `UInt32.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toUInt32\"><span class=\"name\">Float</span>.<span class=\"name\">toUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L100-L105","name":"Float.toUInt16","line":100,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toUInt16","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt16` (including Inf), returns the maximum value of `UInt16`\n(i.e. `UInt16.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toUInt16\"><span class=\"name\">Float</span>.<span class=\"name\">toUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L94-L99","name":"Float.toUInt8","line":94,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toUInt8","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt8` (including Inf), returns the maximum value of `UInt8`\n(i.e. `UInt8.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toUInt8\"><span class=\"name\">Float</span>.<span class=\"name\">toUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L93-L93","name":"Float.toString","line":93,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toString\"><span class=\"name\">Float</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L91-L91","name":"floatDecLe","line":91,"kind":"instance","docLink":"./Init/Data/Float.html#floatDecLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#floatDecLe\"><span class=\"name\">floatDecLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L90-L90","name":"floatDecLt","line":90,"kind":"instance","docLink":"./Init/Data/Float.html#floatDecLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#floatDecLt\"><span class=\"name\">floatDecLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L86-L88","name":"Float.decLe","line":86,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.decLe\"><span class=\"name\">Float</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L82-L84","name":"Float.decLt","line":82,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.decLt\"><span class=\"name\">Float</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L80-L80","name":"instBEqFloat","line":80,"kind":"instance","docLink":"./Init/Data/Float.html#instBEqFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instBEqFloat\"><span class=\"name\">instBEqFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L77-L78","name":"Float.beq","line":77,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.beq","doc":"Note: this is not reflexive since `NaN != NaN`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.beq\"><span class=\"name\">Float</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L75-L75","name":"instLEFloat","line":75,"kind":"instance","docLink":"./Init/Data/Float.html#instLEFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instLEFloat\"><span class=\"name\">instLEFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L74-L74","name":"instLTFloat","line":74,"kind":"instance","docLink":"./Init/Data/Float.html#instLTFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instLTFloat\"><span class=\"name\">instLTFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L73-L73","name":"instNegFloat","line":73,"kind":"instance","docLink":"./Init/Data/Float.html#instNegFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instNegFloat\"><span class=\"name\">instNegFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L72-L72","name":"instDivFloat","line":72,"kind":"instance","docLink":"./Init/Data/Float.html#instDivFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instDivFloat\"><span class=\"name\">instDivFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L71-L71","name":"instMulFloat","line":71,"kind":"instance","docLink":"./Init/Data/Float.html#instMulFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instMulFloat\"><span class=\"name\">instMulFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L70-L70","name":"instSubFloat","line":70,"kind":"instance","docLink":"./Init/Data/Float.html#instSubFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instSubFloat\"><span class=\"name\">instSubFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L69-L69","name":"instAddFloat","line":69,"kind":"instance","docLink":"./Init/Data/Float.html#instAddFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instAddFloat\"><span class=\"name\">instAddFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L58-L67","name":"Float.toBits","line":58,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.toBits","doc":"Raw transmutation to `UInt64`.\n\nFloats and UInts have the same endianness on all supported platforms.\nIEEE 754 very precisely specifies the bit layout of floats.\n\nNote that this function is distinct from `Float.toUInt64`, which attempts\nto preserve the numeric value, and not the bitwise value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.toBits\"><span class=\"name\">Float</span>.<span class=\"name\">toBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L50-L56","name":"Float.ofBits","line":50,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.ofBits","doc":"Raw transmutation from `UInt64`.\n\nFloats and UInts have the same endianness on all supported platforms.\nIEEE 754 very precisely specifies the bit layout of floats.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.ofBits\"><span class=\"name\">Float</span>.<span class=\"name\">ofBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L47-L48","name":"Float.le","line":47,"kind":"def","docLink":"./Init/Data/Float.html#Float.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.le\"><span class=\"name\">Float</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L43-L45","name":"Float.lt","line":43,"kind":"def","docLink":"./Init/Data/Float.html#Float.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.lt\"><span class=\"name\">Float</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L40-L40","name":"Float.neg","line":40,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.neg\"><span class=\"name\">Float</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L39-L39","name":"Float.div","line":39,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.div\"><span class=\"name\">Float</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L38-L38","name":"Float.mul","line":38,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.mul\"><span class=\"name\">Float</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L37-L37","name":"Float.sub","line":37,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.sub\"><span class=\"name\">Float</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L36-L36","name":"Float.add","line":36,"kind":"opaque","docLink":"./Init/Data/Float.html#Float.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.add\"><span class=\"name\">Float</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L34-L34","name":"instNonemptyFloat","line":34,"kind":"instance","docLink":"./Init/Data/Float.html#instNonemptyFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#instNonemptyFloat\"><span class=\"name\">instNonemptyFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L32-L32","name":"Float.val","line":32,"kind":"def","docLink":"./Init/Data/Float.html#Float.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.val\"><span class=\"name\">Float</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#floatSpec\">floatSpec</a>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L31-L31","name":"Float.mk","line":31,"kind":"ctor","docLink":"./Init/Data/Float.html#Float.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float.mk\"><span class=\"name\">Float</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#floatSpec\">floatSpec</a>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L29-L32","name":"Float","line":29,"kind":"structure","docLink":"./Init/Data/Float.html#Float","doc":"Native floating point type, corresponding to the IEEE 754 *binary64* format\n(`double` in C or `f64` in Rust). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#Float\"><span class=\"name\">Float</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L20-L27","name":"floatSpec","line":20,"kind":"opaque","docLink":"./Init/Data/Float.html#floatSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#floatSpec\"><span class=\"name\">floatSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L17-L17","name":"FloatSpec.decLe","line":17,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.decLe\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.le\">le</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L16-L16","name":"FloatSpec.decLt","line":16,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.decLt\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.lt\">lt</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L15-L15","name":"FloatSpec.le","line":15,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.le\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L14-L14","name":"FloatSpec.lt","line":14,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.lt\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L13-L13","name":"FloatSpec.val","line":13,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.val\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L12-L12","name":"FloatSpec.float","line":12,"kind":"def","docLink":"./Init/Data/Float.html#FloatSpec.float","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.float\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">float</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L11-L11","name":"FloatSpec.mk","line":11,"kind":"ctor","docLink":"./Init/Data/Float.html#FloatSpec.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec.mk\"><span class=\"name\">FloatSpec</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">float</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">float</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lt </span><span class=\"fn\">le</span> : <span class=\"fn\"><span class=\"fn\">float</span> → <span class=\"fn\">float</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decLt</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">lt</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decLe</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">le</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float.lean#L11-L17","name":"FloatSpec","line":11,"kind":"structure","docLink":"./Init/Data/Float.html#FloatSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float.html#FloatSpec\"><span class=\"name\">FloatSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> 1</div></div>"}]}