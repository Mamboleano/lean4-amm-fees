{"name":"Lean.Elab.Structure","instances":[{"typeNames":["Lean.Elab.Command.StructView"],"name":"Lean.Elab.Command.instInhabitedStructView","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.StructParentInfo"],"name":"Lean.Elab.Command.instInhabitedStructParentInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.StructFieldKind"],"name":"Lean.Elab.Command.instInhabitedStructFieldKind","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Elab.Command.instDecidableEqStructFieldKind","className":"Decidable"},{"typeNames":["Lean.Elab.Command.StructFieldKind"],"name":"Lean.Elab.Command.instReprStructFieldKind","className":"Repr"},{"typeNames":["Lean.Elab.Command.StructFieldInfo"],"name":"Lean.Elab.Command.instInhabitedStructFieldInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.StructFieldInfo"],"name":"Lean.Elab.Command.instReprStructFieldInfo","className":"Repr"}],"imports":["Lean.Meta.Structure","Lean.Elab.MutualInductive"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L1031-L1075","name":"Lean.Elab.Command.elabStructureCommand","line":1031,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.elabStructureCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.elabStructureCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabStructureCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L448-L449","name":"Lean.Elab.Command.FieldMap","line":448,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.FieldMap","doc":"Map from field name to expression representing the field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.FieldMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">FieldMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L304-L352","name":"Lean.Elab.Command.structureSyntaxToView","line":304,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structureSyntaxToView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structureSyntaxToView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structureSyntaxToView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L202-L210","name":"Lean.Elab.Command.checkValidFieldModifier","line":202,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.checkValidFieldModifier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.checkValidFieldModifier\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">checkValidFieldModifier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L133-L134","name":"Lean.Elab.Command.StructFieldInfo.isSubobject","line":133,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isSubobject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">isSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L130-L131","name":"Lean.Elab.Command.StructFieldInfo.isFromSubobject","line":130,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isFromSubobject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isFromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">isFromSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L128-L128","name":"Lean.Elab.Command.instReprStructFieldInfo","line":128,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instReprStructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L128-L128","name":"Lean.Elab.Command.instInhabitedStructFieldInfo","line":128,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedStructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L127-L127","name":"Lean.Elab.Command.StructFieldInfo.value?","line":127,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.value?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.value?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">value?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L126-L126","name":"Lean.Elab.Command.StructFieldInfo.fvar","line":126,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.fvar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L125-L125","name":"Lean.Elab.Command.StructFieldInfo.declName","line":125,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.declName","doc":"Name of projection function.\nRemark: for `fromSubobject` fields, `declName` is only relevant for auxiliary \"default value\" functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L122-L122","name":"Lean.Elab.Command.StructFieldInfo.kind","line":122,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L121-L121","name":"Lean.Elab.Command.StructFieldInfo.name","line":121,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L120-L120","name":"Lean.Elab.Command.StructFieldInfo.ref","line":120,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L119-L119","name":"Lean.Elab.Command.StructFieldInfo.mk","line":119,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\">StructFieldInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L116-L128","name":"Lean.Elab.Command.StructFieldInfo","line":116,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo","doc":"Elaborated field info.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L114-L114","name":"Lean.Elab.Command.instReprStructFieldKind","line":114,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instReprStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L114-L114","name":"Lean.Elab.Command.instDecidableEqStructFieldKind","line":114,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instDecidableEqStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instDecidableEqStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instDecidableEqStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L114-L114","name":"Lean.Elab.Command.instInhabitedStructFieldKind","line":114,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L112-L113","name":"Lean.Elab.Command.StructFieldKind.subobject","line":112,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.subobject","doc":"The field is an embedded parent structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L109-L111","name":"Lean.Elab.Command.StructFieldKind.fromSubobject","line":109,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.fromSubobject","doc":"Field that comes from a embedded parent field, and is represented within a `subobject` field.\nIts default value may be overridden. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.fromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">fromSubobject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L105-L108","name":"Lean.Elab.Command.StructFieldKind.copiedField","line":105,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.copiedField","doc":"Field that comes from a parent but will be represented as a new field.\nThe field is represented as a constructor argument.\nIts default value may be overridden. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.copiedField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">copiedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L102-L104","name":"Lean.Elab.Command.StructFieldKind.newField","line":102,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.newField","doc":"New field defined by this `structure`.\nThe field is represented as a constructor argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind.newField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">newField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L98-L114","name":"Lean.Elab.Command.StructFieldKind","line":98,"kind":"inductive","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind","doc":"Records the way in which a field is represented in a structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L96-L96","name":"Lean.Elab.Command.instInhabitedStructParentInfo","line":96,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructParentInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedStructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L95-L95","name":"Lean.Elab.Command.StructParentInfo.type","line":95,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L94-L94","name":"Lean.Elab.Command.StructParentInfo.subobject","line":94,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.subobject","doc":"Whether this parent corresponds to a `subobject` field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L92-L92","name":"Lean.Elab.Command.StructParentInfo.declName","line":92,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.declName","doc":"Name of the projection function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L90-L90","name":"Lean.Elab.Command.StructParentInfo.name","line":90,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.name","doc":"Field name for parent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L88-L88","name":"Lean.Elab.Command.StructParentInfo.structName","line":88,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L87-L87","name":"Lean.Elab.Command.StructParentInfo.fvar?","line":87,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.fvar?","doc":"A let variable that represents this structure parent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.fvar?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">fvar?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L85-L85","name":"Lean.Elab.Command.StructParentInfo.addTermInfo","line":85,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.addTermInfo","doc":"Whether to add term info to the ref. False if there's no user-provided parent projection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.addTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">addTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L83-L83","name":"Lean.Elab.Command.StructParentInfo.ref","line":83,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L82-L82","name":"Lean.Elab.Command.StructParentInfo.mk","line":82,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addTermInfo</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName </span><span class=\"fn\">name </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subobject</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\">StructParentInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L79-L96","name":"Lean.Elab.Command.StructParentInfo","line":79,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo","doc":"Elaborated parent info.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L72-L77","name":"Lean.Elab.Command.StructView.ctor","line":72,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.ctor","doc":"Gets the single constructor view from the underlying `InductiveView`.\nRecall that `structure`s have exactly one constructor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.ctor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">view</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.CtorView\">CtorView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L70-L70","name":"Lean.Elab.Command.instInhabitedStructView","line":70,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedStructView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L69-L69","name":"Lean.Elab.Command.StructView.fields","line":69,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L68-L68","name":"Lean.Elab.Command.StructView.parents","line":68,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.parents","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.parents\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span>.<span class=\"name\">parents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L67-L67","name":"Lean.Elab.Command.StructView.mk","line":67,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInductiveView</span> : <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parents</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L67-L70","name":"Lean.Elab.Command.StructView","line":67,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">Lean.Elab.Command.InductiveView</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L67-L70","name":"Lean.Elab.Command.StructView.toInductiveView","line":67,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.toInductiveView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView.toInductiveView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructView</span>.<span class=\"name\">toInductiveView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L65-L65","name":"Lean.Elab.Command.StructFieldView.value?","line":65,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.value?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.value?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">value?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L64-L64","name":"Lean.Elab.Command.StructFieldView.type?","line":64,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.type?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.type?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L63-L63","name":"Lean.Elab.Command.StructFieldView.binders","line":63,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.binders","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.binders\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L62-L62","name":"Lean.Elab.Command.StructFieldView.rawName","line":62,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.rawName","doc":"The name of the field (with macro scopes).\nUsed when adding the field to the local context, for field elaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.rawName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">rawName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L59-L59","name":"Lean.Elab.Command.StructFieldView.name","line":59,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.name","doc":"The name of the field (without macro scopes). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L57-L57","name":"Lean.Elab.Command.StructFieldView.nameId","line":57,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.nameId","doc":"Ref for the field name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.nameId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">nameId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L55-L55","name":"Lean.Elab.Command.StructFieldView.declName","line":55,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.declName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L54-L54","name":"Lean.Elab.Command.StructFieldView.binderInfo","line":54,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.binderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.binderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binderInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L53-L53","name":"Lean.Elab.Command.StructFieldView.modifiers","line":53,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.modifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.modifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">modifiers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L52-L52","name":"Lean.Elab.Command.StructFieldView.ref","line":52,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L51-L51","name":"Lean.Elab.Command.StructFieldView.mk","line":51,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binderInfo</span> : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nameId</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">rawName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binders</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type? </span><span class=\"fn\">value?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\">StructFieldView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L48-L65","name":"Lean.Elab.Command.StructFieldView","line":48,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView","doc":"Represents the data of the syntax of a structure field declaration.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructFieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L46-L46","name":"Lean.Elab.Command.StructParentView.type","line":46,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L45-L45","name":"Lean.Elab.Command.StructParentView.rawName?","line":45,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.rawName?","doc":"The name of the parent projection (with macro scopes). Used for local name during elaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.rawName?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">rawName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L43-L43","name":"Lean.Elab.Command.StructParentView.name?","line":43,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.name?","doc":"The name of the parent projection (without macro scopes). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.name?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">name?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L41-L41","name":"Lean.Elab.Command.StructParentView.projRef","line":41,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.projRef","doc":"Ref to use for the parent projection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.projRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">projRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L39-L39","name":"Lean.Elab.Command.StructParentView.ref","line":39,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L38-L38","name":"Lean.Elab.Command.StructParentView.mk","line":38,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref </span><span class=\"fn\">projRef</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name? </span><span class=\"fn\">rawName?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\">StructParentView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L35-L46","name":"Lean.Elab.Command.StructParentView","line":35,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView","doc":"Represents the data of the syntax of a structure parent.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.StructParentView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">StructParentView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L21-L24","name":"Lean.Elab.Command.structure.strictResolutionOrder","line":21,"kind":"opaque","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structure</span>.<span class=\"name\">strictResolutionOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Elab/Structure.lean#L16-L19","name":"Lean.Elab.Command.structureDiamondWarning","line":16,"kind":"opaque","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structureDiamondWarning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}