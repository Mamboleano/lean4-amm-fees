{"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.Search","instances":[{"typeNames":["Lean.Meta.Grind.Arith.Cutsat.FindIntValResult"],"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","className":"Inhabited"}],"imports":["Lean.Meta.Tactic.Grind.Arith.Cutsat.Var","Lean.Meta.Tactic.Grind.Arith.Cutsat.Util","Lean.Meta.Tactic.Grind.Arith.Cutsat.DvdCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.LeCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.EqCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.SearchM","Lean.Meta.Tactic.Grind.Arith.Cutsat.Model"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L406-L411","name":"Lean.Meta.Grind.Arith.Cutsat.searchAssigment","line":406,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">searchAssigment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L401-L404","name":"Lean.Meta.Grind.Arith.Cutsat.traceModel","line":401,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.traceModel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.traceModel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">traceModel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L387-L399","name":"Lean.Meta.Grind.Arith.Cutsat.searchAssigmentMain","line":387,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigmentMain","doc":"Search for an assignment/model for the linear constraints. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigmentMain\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">searchAssigmentMain</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L370-L385","name":"Lean.Meta.Grind.Arith.Cutsat.resolveConflict","line":370,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L354-L356","name":"Lean.Meta.Grind.Arith.Cutsat.hasAssignment","line":354,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.hasAssignment","doc":"Returns `true` if we already have a complete assignment / model. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.hasAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">hasAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L292-L352","name":"Lean.Meta.Grind.Arith.Cutsat.processVar","line":292,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.processVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.processVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">processVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L269-L290","name":"Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq","line":269,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq","doc":"Given `c₁` of the form `-a₁*x + p₁ ≤ 0`, and `c` of the form `b*x + p ≠ 0`,\nsplits `c` and resolve with `c₁`.\nRecall that a disequality\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveRatDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L266-L267","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq","line":266,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_c?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L260-L264","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd","line":260,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L257-L258","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdRight","line":257,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdRight\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDvdRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L254-L255","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdLeft","line":254,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvdLeft\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDvdLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L248-L252","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooper","line":248,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooper\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooper</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L245-L246","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperRight","line":245,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperRight\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L242-L243","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperLeft","line":242,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperLeft\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L230-L240","name":"Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict","line":230,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveRealLowerUpperConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L223-L228","name":"Lean.Meta.Grind.Arith.Cutsat.findRatVal","line":223,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findRatVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower </span><span class=\"fn\">upper</span> : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diseqVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L216-L221","name":"Lean.Meta.Grind.Arith.Cutsat.findIntVal.go","line":216,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findIntVal</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">upper</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L204-L221","name":"Lean.Meta.Grind.Arith.Cutsat.findIntVal","line":204,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal","doc":"Tries to find an integer `v` s.t. `lower ≤ v ≤ upper`, `v ∉ dvals`, and `v ∈ s`.\nReturns `.found v` if result was found, `.dvd` if it failed because of the divisibility constraint,\nand `.diseq c` because of the disequality constraint `c`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findIntVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower </span><span class=\"fn\">upper</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L202-L202","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","line":202,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedFindIntValResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L201-L201","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd","line":201,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">dvd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L200-L200","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq","line":200,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">diseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L199-L199","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found","line":199,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">found</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L198-L202","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult","line":198,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L191-L196","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding","line":191,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">leAvoiding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L184-L189","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding","line":184,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">geAvoiding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L181-L182","name":"Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?","line":181,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findRatDiseq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L178-L179","name":"Lean.Meta.Grind.Arith.Cutsat.inDiseqValues","line":178,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.inDiseqValues","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.inDiseqValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">inDiseqValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L174-L176","name":"Lean.Meta.Grind.Arith.Cutsat.findDiseq?","line":174,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findDiseq?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findDiseq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findDiseq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L162-L172","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le","line":162,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le","doc":"Given a divisibility constraint solution space `s := { b, d }`,\nand a candidate assignment `v`, we want to find\nan assignment `w` such that `w ≤ v` such that exists `k`, `w = k*d + b`\nThus,\n- `k*d + b ≤ v`\n- `k ≤ (v - b) / d`\nSo, we take `w = ((v - b) / d)*d + b`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L150-L160","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge","line":150,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge","doc":"Given a divisibility constraint solution space `s := { b, d }`,\nand a candidate assignment `v`, we want to find\nan assignment `w` such that `w ≥ v` such that exists `k`, `w = k*d + b`\nThus,\n- `k*d + b ≥ v`\n- `k ≥ cdiv (v - b) d`\nSo, we take `w = (cdiv (v - b) d)*d + b`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">ge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L144-L148","name":"Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict","line":144,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveDvdConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L118-L142","name":"Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?","line":118,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdCnstr</span>.<span class=\"name\">getSolutions?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L116-L116","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b","line":116,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">b</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L115-L115","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d","line":115,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">d</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L114-L114","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk","line":114,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L110-L116","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution","line":110,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution","doc":"Solution space for a divisibility constraint of the form `d ∣ a*x + b`\nSee `DvdCnstr.getSolutions?` to understand how it is computed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L93-L108","name":"Lean.Meta.Grind.Arith.Cutsat.getDiseqValues","line":93,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getDiseqValues","doc":"Returns values we cannot assign `x` because of disequality constraints. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getDiseqValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getDiseqValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L74-L91","name":"Lean.Meta.Grind.Arith.Cutsat.getBestUpper?","line":74,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestUpper?","doc":"Assuming all variables smaller than `x` have already been assigned,\nreturns the best upper bound for `x` using the given partial assignment and\ninequality constraints where `x` is the maximal variable.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestUpper?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getBestUpper?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L55-L72","name":"Lean.Meta.Grind.Arith.Cutsat.getBestLower?","line":55,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestLower?","doc":"Assuming all variables smaller than `x` have already been assigned,\nreturns the best lower bound for `x` using the given partial assignment and\ninequality constraints where `x` is the maximal variable.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestLower?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getBestLower?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>))</span></span></div></div>"}]}