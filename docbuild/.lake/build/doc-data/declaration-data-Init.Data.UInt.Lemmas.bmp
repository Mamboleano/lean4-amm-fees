{"name":"Init.Data.UInt.Lemmas","instances":[],"imports":["Init.Data.UInt.Basic","Init.Data.Fin.Lemmas","Init.Data.BitVec.Lemmas","Init.Data.BitVec.Bitblast"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L779-L780","name":"USize.toUSize_toUInt64","line":779,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toUSize_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L777-L778","name":"USize.toUSize_toUInt16","line":777,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toUSize_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L775-L776","name":"USize.toUSize_toUInt8","line":775,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUSize_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toUSize_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L772-L773","name":"USize.toUInt32_toUInt64","line":772,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L770-L771","name":"USize.toUInt32_toUInt16","line":770,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L768-L769","name":"USize.toUInt32_toUInt8","line":768,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt32_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L766-L766","name":"USize.toUInt64_toUInt16","line":766,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt64_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt64_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L765-L765","name":"USize.toUInt64_toUInt8","line":765,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt64_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt64_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L763-L763","name":"USize.toUInt16_toUInt64","line":763,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L761-L762","name":"USize.toUInt16_toUInt32","line":761,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt32\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L759-L760","name":"USize.toUInt16_toUInt8","line":759,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt16_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L757-L757","name":"USize.toUInt8_toUInt64","line":757,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L755-L756","name":"USize.toUInt8_toUInt32","line":755,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt32\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L753-L754","name":"USize.toUInt8_toUInt16","line":753,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toUInt8_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L750-L751","name":"UInt64.toUSize_toUInt16","line":750,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUSize_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUSize_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L748-L749","name":"UInt64.toUSize_toUInt8","line":748,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUSize_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUSize_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L746-L746","name":"UInt64.toUInt64_toUInt32","line":746,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt64_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L745-L745","name":"UInt64.toUInt64_toUInt16","line":745,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt64_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L744-L744","name":"UInt64.toUInt64_toUInt8","line":744,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt64_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt64_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L741-L742","name":"UInt64.toUInt32_toUSize","line":741,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUSize\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L739-L740","name":"UInt64.toUInt32_toUInt16","line":739,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L737-L738","name":"UInt64.toUInt32_toUInt8","line":737,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt32_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L734-L735","name":"UInt64.toUInt16_toUSize","line":734,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUSize\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L732-L733","name":"UInt64.toUInt16_toUInt32","line":732,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUInt32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L730-L731","name":"UInt64.toUInt16_toUInt8","line":730,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt16_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L727-L728","name":"UInt64.toUInt8_toUSize","line":727,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUSize\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L725-L726","name":"UInt64.toUInt8_toUInt32","line":725,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUInt32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L723-L724","name":"UInt64.toUInt8_toUInt16","line":723,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toUInt8_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L720-L721","name":"UInt32.toUSize_toUInt64","line":720,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L718-L719","name":"UInt32.toUSize_toUInt16","line":718,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L716-L717","name":"UInt32.toUSize_toUInt8","line":716,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUSize_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L714-L714","name":"UInt32.toUInt64_toUSize","line":714,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L713-L713","name":"UInt32.toUInt64_toUInt16","line":713,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L712-L712","name":"UInt32.toUInt64_toUInt8","line":712,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L709-L710","name":"UInt32.toUInt32_toUSize","line":709,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt32_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L707-L708","name":"UInt32.toUInt32_toUInt64","line":707,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt32_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L706-L706","name":"UInt32.toUInt32_toUInt16","line":706,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt32_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L705-L705","name":"UInt32.toUInt32_toUInt8","line":705,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt32_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt32_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L703-L703","name":"UInt32.toUInt16_toUSize","line":703,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L702-L702","name":"UInt32.toUInt16_toUInt64","line":702,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L700-L701","name":"UInt32.toUInt16_toUInt8","line":700,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt16_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L698-L698","name":"UInt32.toUInt8_toUSize","line":698,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L697-L697","name":"UInt32.toUInt8_toUInt64","line":697,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L695-L696","name":"UInt32.toUInt8_toUInt16","line":695,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt8_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L692-L693","name":"UInt16.toUSize_toUInt64","line":692,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L690-L691","name":"UInt16.toUSize_toUInt32","line":690,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L688-L689","name":"UInt16.toUSize_toUInt8","line":688,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L686-L686","name":"UInt16.toUInt64_toUSize","line":686,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L685-L685","name":"UInt16.toUInt64_toUInt32","line":685,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L684-L684","name":"UInt16.toUInt64_toUInt8","line":684,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L681-L682","name":"UInt16.toUInt32_toUSize","line":681,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L679-L680","name":"UInt16.toUInt32_toUInt64","line":679,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L678-L678","name":"UInt16.toUInt32_toUInt8","line":678,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L675-L676","name":"UInt16.toUInt16_toUSize","line":675,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt16_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L673-L674","name":"UInt16.toUInt16_toUInt64","line":673,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt16_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L671-L672","name":"UInt16.toUInt16_toUInt32","line":671,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt16_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L670-L670","name":"UInt16.toUInt16_toUInt8","line":670,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt16_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt16_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L668-L668","name":"UInt16.toUInt8_toUSize","line":668,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L667-L667","name":"UInt16.toUInt8_toUInt64","line":667,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L666-L666","name":"UInt16.toUInt8_toUInt32","line":666,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt8_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L663-L664","name":"UInt8.toUSize_toUInt64","line":663,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L662-L662","name":"UInt8.toUSize_toUInt32","line":662,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L661-L661","name":"UInt8.toUSize_toUInt16","line":661,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L659-L659","name":"UInt8.toUInt64_toUSize","line":659,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L658-L658","name":"UInt8.toUInt64_toUInt32","line":658,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L657-L657","name":"UInt8.toUInt64_toUInt16","line":657,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L654-L655","name":"UInt8.toUInt32_toUSize","line":654,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L652-L653","name":"UInt8.toUInt32_toUInt64","line":652,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L651-L651","name":"UInt8.toUInt32_toUInt16","line":651,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L648-L649","name":"UInt8.toUInt16_toUSize","line":648,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L646-L647","name":"UInt8.toUInt16_toUInt64","line":646,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L644-L645","name":"UInt8.toUInt16_toUInt32","line":644,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L641-L642","name":"UInt8.toUInt8_toUSize","line":641,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt8_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L639-L640","name":"UInt8.toUInt8_toUInt64","line":639,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt8_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L637-L638","name":"UInt8.toUInt8_toUInt32","line":637,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt8_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L635-L636","name":"UInt8.toUInt8_toUInt16","line":635,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt8_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt8_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L632-L633","name":"USize.ofNatTruncate_toNat","line":632,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatTruncate_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L629-L631","name":"USize.ofNatTruncate_uInt32ToNat","line":629,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt32ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatTruncate_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L626-L628","name":"USize.ofNatTruncate_uInt16ToNat","line":626,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt16ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatTruncate_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L623-L625","name":"USize.ofNatTruncate_uInt8ToNat","line":623,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_uInt8ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatTruncate_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L619-L621","name":"UInt64.ofNatTruncate_uSizeToNat","line":619,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uSizeToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L617-L618","name":"UInt64.ofNatTruncate_toNat","line":617,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L614-L616","name":"UInt64.ofNatTruncate_uInt32ToNat","line":614,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt32ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L611-L613","name":"UInt64.ofNatTruncate_uInt16ToNat","line":611,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt16ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L608-L610","name":"UInt64.ofNatTruncate_uInt8ToNat","line":608,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_uInt8ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L605-L606","name":"UInt32.ofNatTruncate_toNat","line":605,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatTruncate_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L602-L604","name":"UInt32.ofNatTruncate_uInt16ToNat","line":602,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_uInt16ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatTruncate_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L599-L601","name":"UInt32.ofNatTruncate_uInt8ToNat","line":599,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_uInt8ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatTruncate_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L596-L597","name":"UInt16.ofNatTruncate_toNat","line":596,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatTruncate_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L593-L595","name":"UInt16.ofNatTruncate_uInt8ToNat","line":593,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_uInt8ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatTruncate_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L590-L591","name":"UInt8.ofNatTruncate_toNat","line":590,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatTruncate_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatTruncate_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatTruncate_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L586-L588","name":"USize.ofNatTruncate_eq_ofNat","line":586,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatTruncate_eq_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatTruncate_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L583-L585","name":"UInt64.ofNatTruncate_eq_ofNat","line":583,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatTruncate_eq_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatTruncate_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L580-L582","name":"UInt32.ofNatTruncate_eq_ofNat","line":580,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatTruncate_eq_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatTruncate_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L577-L579","name":"UInt16.ofNatTruncate_eq_ofNat","line":577,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatTruncate_eq_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatTruncate_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L574-L576","name":"UInt8.ofNatTruncate_eq_ofNat","line":574,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatTruncate_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatTruncate_eq_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatTruncate_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNatTruncate\">ofNatTruncate</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L571-L572","name":"USize.ofNatLT_eq_ofNat","line":571,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_eq_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L569-L570","name":"UInt64.ofNatLT_eq_ofNat","line":569,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_eq_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L567-L568","name":"UInt32.ofNatLT_eq_ofNat","line":567,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_eq_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L565-L566","name":"UInt16.ofNatLT_eq_ofNat","line":565,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_eq_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L563-L564","name":"UInt8.ofNatLT_eq_ofNat","line":563,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_eq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_eq_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_eq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L560-L561","name":"USize.ofNat_uInt64ToNat","line":560,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt64ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L558-L559","name":"USize.ofNat_uInt32ToNat","line":558,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt32ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L556-L557","name":"USize.ofNat_uInt16ToNat","line":556,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt16ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L554-L555","name":"USize.ofNat_uInt8ToNat","line":554,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_uInt8ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L551-L552","name":"UInt64.ofNat_uSizeToNat","line":551,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uSizeToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L549-L550","name":"UInt64.ofNat_uInt32ToNat","line":549,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt32ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L547-L548","name":"UInt64.ofNat_uInt16ToNat","line":547,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt16ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L545-L546","name":"UInt64.ofNat_uInt8ToNat","line":545,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_uInt8ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L543-L543","name":"UInt32.ofNat_uSizeToNat","line":543,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uSizeToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L542-L542","name":"UInt32.ofNat_uInt64ToNat","line":542,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt64ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L540-L541","name":"UInt32.ofNat_uInt16ToNat","line":540,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt16ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L538-L539","name":"UInt32.ofNat_uInt8ToNat","line":538,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_uInt8ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L536-L536","name":"UInt16.ofNat_uSizeToNat","line":536,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uSizeToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L535-L535","name":"UInt16.ofNat_uInt64ToNat","line":535,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt64ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L534-L534","name":"UInt16.ofNat_uInt32ToNat","line":534,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt32ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L532-L533","name":"UInt16.ofNat_uInt8ToNat","line":532,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_uInt8ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L530-L530","name":"UInt8.ofNat_uSizeToNat","line":530,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uSizeToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L529-L529","name":"UInt8.ofNat_uInt64ToNat","line":529,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt64ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L528-L528","name":"UInt8.ofNat_uInt32ToNat","line":528,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt32ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L527-L527","name":"UInt8.ofNat_uInt16ToNat","line":527,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_uInt16ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L523-L525","name":"USize.ofBitVec_uInt64ToBitVec","line":523,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt64ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt64ToBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_uInt64ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L520-L522","name":"USize.ofBitVec_uInt32ToBitVec","line":520,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt32ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt32ToBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_uInt32ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L517-L519","name":"USize.ofBitVec_uInt16ToBitVec","line":517,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt16ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt16ToBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_uInt16ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L514-L516","name":"USize.ofBitVec_uInt8ToBitVec","line":514,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt8ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_uInt8ToBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_uInt8ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L510-L512","name":"UInt64.ofBitVec_uSizeToBitVec","line":510,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uSizeToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uSizeToBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_uSizeToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L508-L509","name":"UInt64.ofBitVec_uInt32ToBitVec","line":508,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt32ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt32ToBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_uInt32ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L506-L507","name":"UInt64.ofBitVec_uInt16ToBitVec","line":506,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt16ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt16ToBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_uInt16ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L504-L505","name":"UInt64.ofBitVec_uInt8ToBitVec","line":504,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt8ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_uInt8ToBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_uInt8ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L501-L502","name":"UInt32.ofBitVec_uSizeToBitVec","line":501,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uSizeToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uSizeToBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_uSizeToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L499-L500","name":"UInt32.ofBitVec_uInt64ToBitVec","line":499,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt64ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt64ToBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_uInt64ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L497-L498","name":"UInt32.ofBitVec_uInt16ToBitVec","line":497,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt16ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt16ToBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_uInt16ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L495-L496","name":"UInt32.ofBitVec_uInt8ToBitVec","line":495,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt8ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_uInt8ToBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_uInt8ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L492-L493","name":"UInt16.ofBitVec_uSizeToBitVec","line":492,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uSizeToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uSizeToBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_uSizeToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L490-L491","name":"UInt16.ofBitVec_uInt64ToBitVec","line":490,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt64ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt64ToBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_uInt64ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L488-L489","name":"UInt16.ofBitVec_uInt32ToBitVec","line":488,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt32ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt32ToBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_uInt32ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L486-L487","name":"UInt16.ofBitVec_uInt8ToBitVec","line":486,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt8ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_uInt8ToBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_uInt8ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L483-L484","name":"UInt8.ofBitVec_uSizeToBitVec","line":483,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uSizeToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uSizeToBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_uSizeToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L481-L482","name":"UInt8.ofBitVec_uInt64ToBitVec","line":481,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt64ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt64ToBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_uInt64ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L479-L480","name":"UInt8.ofBitVec_uInt32ToBitVec","line":479,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt32ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt32ToBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_uInt32ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L477-L478","name":"UInt8.ofBitVec_uInt16ToBitVec","line":477,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt16ToBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_uInt16ToBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_uInt16ToBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L475-L475","name":"Nat.toUSize_eq","line":475,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Nat.toUSize_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Nat.toUSize_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">toUSize_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#Nat.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">USize.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L474-L474","name":"Nat.toUInt64_eq","line":474,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Nat.toUInt64_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Nat.toUInt64_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">toUInt64_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#Nat.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">UInt64.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L473-L473","name":"Nat.toUInt32_eq","line":473,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Nat.toUInt32_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Nat.toUInt32_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">toUInt32_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#Nat.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">UInt32.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L472-L472","name":"Nat.toUInt16_eq","line":472,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Nat.toUInt16_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Nat.toUInt16_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">toUInt16_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#Nat.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">UInt16.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L471-L471","name":"Nat.toUInt8_eq","line":471,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Nat.toUInt8_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Nat.toUInt8_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">toUInt8_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#Nat.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">UInt8.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L469-L469","name":"USize.ofFin_uint32ToFin","line":469,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint32ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint32ToFin\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_uint32ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt32.size_le_usizeSize\">UInt32.size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L468-L468","name":"USize.ofFin_uint16ToFin","line":468,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint16ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint16ToFin\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_uint16ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt16.size_le_usizeSize\">UInt16.size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L467-L467","name":"USize.ofFin_uint8ToFin","line":467,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint8ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofFin_uint8ToFin\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_uint8ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt8.size_le_usizeSize\">UInt8.size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L465-L465","name":"UInt64.ofFin_uint32ToFin","line":465,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint32ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint32ToFin\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_uint32ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L464-L464","name":"UInt64.ofFin_uint16ToFin","line":464,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint16ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint16ToFin\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_uint16ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L463-L463","name":"UInt64.ofFin_uint8ToFin","line":463,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint8ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_uint8ToFin\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_uint8ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L461-L461","name":"UInt32.ofFin_uint16ToFin","line":461,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_uint16ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_uint16ToFin\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_uint16ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L460-L460","name":"UInt32.ofFin_uint8ToFin","line":460,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_uint8ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_uint8ToFin\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_uint8ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L458-L458","name":"UInt16.ofFin_uint8ToFin","line":458,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofFin_uint8ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofFin_uint8ToFin\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_uint8ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L456-L456","name":"USize.ofFin_toFin","line":456,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofFin_toFin\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_toFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L455-L455","name":"UInt64.ofFin_toFin","line":455,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofFin_toFin\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_toFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L454-L454","name":"UInt32.ofFin_toFin","line":454,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofFin_toFin\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_toFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L453-L453","name":"UInt16.ofFin_toFin","line":453,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofFin_toFin\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_toFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L452-L452","name":"UInt8.ofFin_toFin","line":452,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofFin_toFin\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_toFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L449-L450","name":"USize.ofNatLT_uInt64ToNat","line":449,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt64ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L447-L448","name":"UInt32.ofNatLT_uSizeToNat","line":447,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uSizeToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L445-L446","name":"UInt32.ofNatLT_uInt64ToNat","line":445,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt64ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L443-L444","name":"UInt16.ofNatLT_uSizeToNat","line":443,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uSizeToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L441-L442","name":"UInt16.ofNatLT_uInt64ToNat","line":441,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt64ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L439-L440","name":"UInt16.ofNatLT_uInt32ToNat","line":439,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt32ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L437-L438","name":"UInt8.ofNatLT_uSizeToNat","line":437,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uSizeToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L435-L436","name":"UInt8.ofNatLT_uInt64ToNat","line":435,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt64ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L433-L434","name":"UInt8.ofNatLT_uInt32ToNat","line":433,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt32ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L431-L432","name":"UInt8.ofNatLT_uInt16ToNat","line":431,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_uInt16ToNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L428-L428","name":"UInt64.ofNatLT_uSizeToNat","line":428,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uSizeToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L427-L427","name":"USize.ofNatLT_toNat","line":427,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L425-L425","name":"UInt64.ofNatLT_toNat","line":425,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L423-L423","name":"USize.ofNatLT_uInt32ToNat","line":423,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt32ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L422-L422","name":"UInt64.ofNatLT_uInt32ToNat","line":422,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt32ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L421-L421","name":"UInt32.ofNatLT_toNat","line":421,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L419-L419","name":"USize.ofNatLT_uInt16ToNat","line":419,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt16ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L418-L418","name":"UInt64.ofNatLT_uInt16ToNat","line":418,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt16ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L417-L417","name":"UInt32.ofNatLT_uInt16ToNat","line":417,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt16ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L416-L416","name":"UInt16.ofNatLT_toNat","line":416,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L414-L414","name":"USize.ofNatLT_uInt8ToNat","line":414,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNatLT_uInt8ToNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L413-L413","name":"UInt64.ofNatLT_uInt8ToNat","line":413,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNatLT_uInt8ToNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L412-L412","name":"UInt32.ofNatLT_uInt8ToNat","line":412,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNatLT_uInt8ToNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L411-L411","name":"UInt16.ofNatLT_uInt8ToNat","line":411,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNatLT_uInt8ToNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L410-L410","name":"UInt8.ofNatLT_toNat","line":410,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNatLT_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L407-L408","name":"UInt64.toBitVec_toUSize","line":407,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUSize\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L405-L406","name":"UInt32.toBitVec_toUSize","line":405,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L403-L404","name":"UInt16.toBitVec_toUSize","line":403,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L401-L402","name":"UInt8.toBitVec_toUSize","line":401,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L398-L399","name":"USize.toBitVec_toUInt64","line":398,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L397-L397","name":"UInt32.toBitVec_toUInt64","line":397,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L396-L396","name":"UInt16.toBitVec_toUInt64","line":396,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L395-L395","name":"UInt8.toBitVec_toUInt64","line":395,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L393-L393","name":"USize.toBitVec_toUInt32","line":393,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt32\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L392-L392","name":"UInt64.toBitVec_toUInt32","line":392,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L391-L391","name":"UInt16.toBitVec_toUInt32","line":391,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L390-L390","name":"UInt8.toBitVec_toUInt32","line":390,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L388-L388","name":"USize.toBitVec_toUInt16","line":388,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L387-L387","name":"UInt64.toBitVec_toUInt16","line":387,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L386-L386","name":"UInt32.toBitVec_toUInt16","line":386,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L385-L385","name":"UInt8.toBitVec_toUInt16","line":385,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L383-L383","name":"USize.toBitVec_toUInt8","line":383,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L382-L382","name":"UInt64.toBitVec_toUInt8","line":382,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L381-L381","name":"UInt32.toBitVec_toUInt8","line":381,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L380-L380","name":"UInt16.toBitVec_toUInt8","line":380,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L378-L378","name":"USize.toFin_toUInt64","line":378,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toFin_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toFin_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#USize.size_le_uint64Size\">size_le_uint64Size</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L375-L376","name":"UInt32.toFin_toUSize","line":375,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt32.size_le_usizeSize\">size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L374-L374","name":"UInt32.toFin_toUInt64","line":374,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L371-L372","name":"UInt16.toFin_toUSize","line":371,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt16.size_le_usizeSize\">size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L370-L370","name":"UInt16.toFin_toUInt64","line":370,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L369-L369","name":"UInt16.toFin_toUInt32","line":369,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L366-L367","name":"UInt8.toFin_toUSize","line":366,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <a href=\"./Init/Data/UInt/Lemmas.html#UInt8.size_le_usizeSize\">size_le_usizeSize</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L365-L365","name":"UInt8.toFin_toUInt64","line":365,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L364-L364","name":"UInt8.toFin_toUInt32","line":364,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L363-L363","name":"UInt8.toFin_toUInt16","line":363,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castLE\">Fin.castLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L361-L361","name":"BitVec.ofFin_uSizeToFin","line":361,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uSizeToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uSizeToFin\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofFin_uSizeToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toFin</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L360-L360","name":"BitVec.ofFin_uInt64ToFin","line":360,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt64ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt64ToFin\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofFin_uInt64ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toFin</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L359-L359","name":"BitVec.ofFin_uInt32ToFin","line":359,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt32ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt32ToFin\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofFin_uInt32ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toFin</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L358-L358","name":"BitVec.ofFin_uInt16ToFin","line":358,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt16ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt16ToFin\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofFin_uInt16ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toFin</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L357-L357","name":"BitVec.ofFin_uInt8ToFin","line":357,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt8ToFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofFin_uInt8ToFin\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofFin_uInt8ToFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toFin</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L355-L355","name":"BitVec.ofNatLT_uSizeToNat","line":355,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uSizeToNat\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofNatLT_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span><a href=\"./Init/Prelude.html#BitVec.ofNatLT\">#'</a><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L354-L354","name":"BitVec.ofNatLT_uInt64ToNat","line":354,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt64ToNat\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofNatLT_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span><a href=\"./Init/Prelude.html#BitVec.ofNatLT\">#'</a><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L353-L353","name":"BitVec.ofNatLT_uInt32ToNat","line":353,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt32ToNat\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofNatLT_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span><a href=\"./Init/Prelude.html#BitVec.ofNatLT\">#'</a><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L352-L352","name":"BitVec.ofNatLT_uInt16ToNat","line":352,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt16ToNat\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofNatLT_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span><a href=\"./Init/Prelude.html#BitVec.ofNatLT\">#'</a><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L351-L351","name":"BitVec.ofNatLT_uInt8ToNat","line":351,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#BitVec.ofNatLT_uInt8ToNat\"><span class=\"name\">BitVec</span>.<span class=\"name\">ofNatLT_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span><a href=\"./Init/Prelude.html#BitVec.ofNatLT\">#'</a><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L349-L349","name":"Fin.mk_uSizeToNat","line":349,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Fin.mk_uSizeToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Fin.mk_uSizeToNat\"><span class=\"name\">Fin</span>.<span class=\"name\">mk_uSizeToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L348-L348","name":"Fin.mk_uInt64ToNat","line":348,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt64ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt64ToNat\"><span class=\"name\">Fin</span>.<span class=\"name\">mk_uInt64ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L347-L347","name":"Fin.mk_uInt32ToNat","line":347,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt32ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt32ToNat\"><span class=\"name\">Fin</span>.<span class=\"name\">mk_uInt32ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L346-L346","name":"Fin.mk_uInt16ToNat","line":346,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt16ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt16ToNat\"><span class=\"name\">Fin</span>.<span class=\"name\">mk_uInt16ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L345-L345","name":"Fin.mk_uInt8ToNat","line":345,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt8ToNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#Fin.mk_uInt8ToNat\"><span class=\"name\">Fin</span>.<span class=\"name\">mk_uInt8ToNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L343-L343","name":"UInt32.toUInt64_mod_4294967296","line":343,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_mod_4294967296","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toUInt64_mod_4294967296\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_mod_4294967296</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L341-L341","name":"UInt16.toUSize_mod_65536","line":341,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_mod_65536","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUSize_mod_65536\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_mod_65536</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L340-L340","name":"UInt16.toUInt64_mod_65536","line":340,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_mod_65536","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt64_mod_65536\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_mod_65536</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L339-L339","name":"UInt16.toUInt32_mod_65536","line":339,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_mod_65536","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toUInt32_mod_65536\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_mod_65536</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L337-L337","name":"UInt8.toUSize_mod_256","line":337,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_mod_256","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUSize_mod_256\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_mod_256</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L336-L336","name":"UInt8.toUInt64_mod_256","line":336,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_mod_256","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt64_mod_256\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_mod_256</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L335-L335","name":"UInt8.toUInt32_mod_256","line":335,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_mod_256","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt32_mod_256\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_mod_256</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L334-L334","name":"UInt8.toUInt16_mod_256","line":334,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_mod_256","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toUInt16_mod_256\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_mod_256</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L332-L332","name":"USize.toNat_mod_uInt64Size","line":332,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_uInt64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_uInt64Size\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mod_uInt64Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L331-L331","name":"USize.toNat_mod_size","line":331,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_size\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mod_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L329-L329","name":"UInt64.toNat_mod_size","line":329,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod_size\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_mod_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L327-L327","name":"UInt32.toNat_mod_uSizeSize","line":327,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_uSizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_uSizeSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mod_uSizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L326-L326","name":"UInt32.toNat_mod_uInt64Size","line":326,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_uInt64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_uInt64Size\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mod_uInt64Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L325-L325","name":"UInt32.toNat_mod_size","line":325,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_size\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mod_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L323-L323","name":"UInt16.toNat_mod_uSizeSize","line":323,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uSizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uSizeSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod_uSizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L322-L322","name":"UInt16.toNat_mod_uInt64Size","line":322,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uInt64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uInt64Size\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod_uInt64Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L321-L321","name":"UInt16.toNat_mod_uInt32Size","line":321,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uInt32Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_uInt32Size\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod_uInt32Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt32.size\">UInt32.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L320-L320","name":"UInt16.toNat_mod_size","line":320,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_size\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L318-L318","name":"UInt8.toNat_mod_uSizeSize","line":318,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uSizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uSizeSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_uSizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L317-L317","name":"UInt8.toNat_mod_uInt64Size","line":317,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt64Size\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_uInt64Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L316-L316","name":"UInt8.toNat_mod_uInt32Size","line":316,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt32Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt32Size\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_uInt32Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt32.size\">UInt32.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L315-L315","name":"UInt8.toNat_mod_uInt16Size","line":315,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt16Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_uInt16Size\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_uInt16Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt16.size\">UInt16.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L314-L314","name":"UInt8.toNat_mod_size","line":314,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_size\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L311-L312","name":"mod_uInt64Size_uSizeSize","line":311,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#mod_uInt64Size_uSizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#mod_uInt64Size_uSizeSize\"><span class=\"name\">mod_uInt64Size_uSizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L309-L310","name":"mod_usizeSize_uInt32Size","line":309,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt32Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt32Size\"><span class=\"name\">mod_usizeSize_uInt32Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt32.size\">UInt32.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt32.size\">UInt32.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L307-L308","name":"mod_usizeSize_uInt16Size","line":307,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt16Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt16Size\"><span class=\"name\">mod_usizeSize_uInt16Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt16.size\">UInt16.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt16.size\">UInt16.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L305-L306","name":"mod_usizeSize_uInt8Size","line":305,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt8Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#mod_usizeSize_uInt8Size\"><span class=\"name\">mod_usizeSize_uInt8Size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt8.size\">UInt8.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#UInt8.size\">UInt8.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L303-L303","name":"USize.size_dvd_uInt64Size","line":303,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.size_dvd_uInt64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.size_dvd_uInt64Size\"><span class=\"name\">USize</span>.<span class=\"name\">size_dvd_uInt64Size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.size\">size</a> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L302-L302","name":"UInt32.size_dvd_usizeSize","line":302,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.size_dvd_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.size_dvd_usizeSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">size_dvd_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.size\">size</a> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L301-L301","name":"UInt16.size_dvd_usizeSize","line":301,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.size_dvd_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.size_dvd_usizeSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">size_dvd_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.size\">size</a> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L300-L300","name":"UInt8.size_dvd_usizeSize","line":300,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.size_dvd_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.size_dvd_usizeSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">size_dvd_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.size\">size</a> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L297-L298","name":"UInt32.toNat_lt_usizeSize","line":297,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_usizeSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_lt_usizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L295-L296","name":"UInt16.toNat_lt_usizeSize","line":295,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt_usizeSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_lt_usizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L293-L294","name":"UInt8.toNat_lt_usizeSize","line":293,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt_usizeSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_lt_usizeSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L290-L291","name":"USize.size_le_uint64Size","line":290,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.size_le_uint64Size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.size_le_uint64Size\"><span class=\"name\">USize</span>.<span class=\"name\">size_le_uint64Size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.size\">size</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#UInt64.size\">UInt64.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L289-L289","name":"USize.toNat_lt","line":289,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L288-L288","name":"USize.toNat_lt_two_pow_numBits","line":288,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_lt_two_pow_numBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_lt_two_pow_numBits\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_lt_two_pow_numBits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L287-L287","name":"USize.size_eq_two_pow","line":287,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.size_eq_two_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.size_eq_two_pow\"><span class=\"name\">USize</span>.<span class=\"name\">size_eq_two_pow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.size\">size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L285-L286","name":"UInt32.size_le_usizeSize","line":285,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.size_le_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.size_le_usizeSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">size_le_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.size\">size</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L283-L284","name":"UInt16.size_le_usizeSize","line":283,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.size_le_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.size_le_usizeSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">size_le_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.size\">size</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L281-L282","name":"UInt16.size_lt_usizeSize","line":281,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.size_lt_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.size_lt_usizeSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">size_lt_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.size\">size</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L279-L280","name":"UInt8.size_le_usizeSize","line":279,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.size_le_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.size_le_usizeSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">size_le_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.size\">size</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L277-L278","name":"UInt8.size_lt_usizeSize","line":277,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.size_lt_usizeSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.size_lt_usizeSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">size_lt_usizeSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.size\">size</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L275-L275","name":"UInt64.toNat_lt","line":275,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L274-L274","name":"UInt32.toNat_lt","line":274,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L273-L273","name":"UInt16.toNat_lt","line":273,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L272-L272","name":"UInt8.toNat_lt","line":272,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L269-L270","name":"UInt32.le_toNat_of_le","line":269,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_toNat_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_toNat_of_le\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_toNat_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L266-L267","name":"UInt32.toNat_le_of_le","line":266,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_le_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_le_of_le\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L263-L264","name":"UInt32.lt_toNat_of_lt","line":263,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_toNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_toNat_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_toNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L260-L261","name":"UInt32.toNat_lt_of_lt","line":260,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_lt_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L257-L258","name":"USize.toNat_ofNat_of_lt_32","line":257,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat_of_lt_32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat_of_lt_32\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNat_of_lt_32</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">4294967296</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L255-L255","name":"USize.toNat_toUInt64","line":255,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt64\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L254-L254","name":"USize.toNat_toUInt32","line":254,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt32\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L253-L253","name":"USize.toNat_toUInt16","line":253,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt16\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L252-L252","name":"USize.toNat_toUInt8","line":252,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toUInt8\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L250-L250","name":"USize.toNat_ofNat32","line":250,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat32\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNat32</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">4294967296</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/Basic.html#USize.ofNat32\">ofNat32</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.val_val_eq_toNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.val_val_eq_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toFin_toBitVec","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toFin_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toFin_toBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_ofNat_of_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat_of_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.eq_of_toFin_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.eq_of_toFin_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.eq_of_toFin_eq\"><span class=\"name\">USize</span>.<span class=\"name\">eq_of_toFin_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.lt_iff_toNat_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.lt_iff_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.lt_iff_toNat_lt\"><span class=\"name\">USize</span>.<span class=\"name\">lt_iff_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toBitVec_inj","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_inj\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ofNat_toNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_toBitVec_eq_toNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toBitVec_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toBitVec_eq_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toBitVec_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.mod_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.mod_lt\"><span class=\"name\">USize</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_lt_size","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_lt_size\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_inj","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_inj\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_ofBitVec","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_antisymm_iff","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_antisymm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_antisymm_iff\"><span class=\"name\">USize</span>.<span class=\"name\">le_antisymm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ofBitVec_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toFin_inj","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toFin_inj\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.not_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.not_lt\"><span class=\"name\">USize</span>.<span class=\"name\">not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.eq_of_val_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.eq_of_val_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.eq_of_val_eq\"><span class=\"name\">USize</span>.<span class=\"name\">eq_of_val_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_sub_of_le","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_sub_of_le\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_sub_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat.inj","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat.inj\"><span class=\"name\">USize</span>.<span class=\"name\">toNat</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_antisymm","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_antisymm\"><span class=\"name\">USize</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.not_le","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.not_le\"><span class=\"name\">USize</span>.<span class=\"name\">not_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_iff_toNat_le","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_iff_toNat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_iff_toNat_le\"><span class=\"name\">USize</span>.<span class=\"name\">le_iff_toNat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.mod_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.mod_def\"><span class=\"name\">USize</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.lt_irrefl","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.lt_irrefl\"><span class=\"name\">USize</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_total","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_total\"><span class=\"name\">USize</span>.<span class=\"name\">le_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_div","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_div\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_refl","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_refl\"><span class=\"name\">USize</span>.<span class=\"name\">le_refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_trans","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_trans\"><span class=\"name\">USize</span>.<span class=\"name\">le_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.val_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.val_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.val_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">val_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ne_of_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ne_of_lt\"><span class=\"name\">USize</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.eq_of_toBitVec_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.eq_of_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.eq_of_toBitVec_eq\"><span class=\"name\">USize</span>.<span class=\"name\">eq_of_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.add_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.add_def\"><span class=\"name\">USize</span>.<span class=\"name\">add_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_add","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_add\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.val_inj","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.val_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.val_inj\"><span class=\"name\">USize</span>.<span class=\"name\">val_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toFin_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toFin_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toFin_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toFin_val","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toFin_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toFin_val\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ofBitVec_toBitVec_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_toBitVec_eq\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.lt_trans","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.lt_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.lt_trans\"><span class=\"name\">USize</span>.<span class=\"name\">lt_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toBitVec_eq_of_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_eq_of_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.lt_asymm","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.lt_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.lt_asymm\"><span class=\"name\">USize</span>.<span class=\"name\">lt_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.mul_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.mul_def\"><span class=\"name\">USize</span>.<span class=\"name\">mul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_ofNatLT","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNatLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNatLT\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNatLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.eq_iff_toBitVec_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.eq_iff_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.eq_iff_toBitVec_eq\"><span class=\"name\">USize</span>.<span class=\"name\">eq_iff_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ne_of_toBitVec_ne","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ne_of_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ne_of_toBitVec_ne\"><span class=\"name\">USize</span>.<span class=\"name\">ne_of_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.mk_toBitVec_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.mk_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.mk_toBitVec_eq\"><span class=\"name\">USize</span>.<span class=\"name\">mk_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.modn_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.modn_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.modn_lt\"><span class=\"name\">USize</span>.<span class=\"name\">modn_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_toBitVec","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_toBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toBitVec_ne_of_ne","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_ne_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_ne_of_ne\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_ne_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ofNat_one","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofNat_one\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_sub","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_sub\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_mul","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mul\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.sub_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.sub_def\"><span class=\"name\">USize</span>.<span class=\"name\">sub_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toBitVec_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.mk_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.mk_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.mk_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">mk_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_mk","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mk\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_mod_lt","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mod_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">m</span></span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ne_iff_toBitVec_ne","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ne_iff_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ne_iff_toBitVec_ne\"><span class=\"name\">USize</span>.<span class=\"name\">ne_iff_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.zero_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.zero_def\"><span class=\"name\">USize</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.ofBitVec_toBitVec","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.ofBitVec_toBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.one_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.one_def\"><span class=\"name\">USize</span>.<span class=\"name\">one_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toBitVec_eq_of_eq","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toBitVec_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toBitVec_eq_of_eq\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_zero","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_zero\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_ofNat","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_mod","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_mod\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.lt_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.lt_def\"><span class=\"name\">USize</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.le_def","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.le_def\"><span class=\"name\">USize</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L248-L248","name":"USize.toNat_ofNatCore","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNatCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#USize.toNat_ofNatCore\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_ofNatCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toUInt16","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt16\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_ofNatLT","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNatLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNatLT\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_ofNatLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toFin_val","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toFin_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toFin_val\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ne_of_toBitVec_ne","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ne_of_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ne_of_toBitVec_ne\"><span class=\"name\">UInt64</span>.<span class=\"name\">ne_of_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.sub_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.sub_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">sub_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.eq_iff_toBitVec_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.eq_iff_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.eq_iff_toBitVec_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">eq_iff_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ofNat_one","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_one\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.not_le","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.not_le\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.mod_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.mod_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ofNat_toNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofNat_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.modn_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.modn_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.modn_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">modn_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.zero_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.zero_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.mul_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.mul_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">mul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_trans","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_trans\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ne_iff_toBitVec_ne","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ne_iff_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ne_iff_toBitVec_ne\"><span class=\"name\">UInt64</span>.<span class=\"name\">ne_iff_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_add","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_add\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_mod_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">m</span></span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.lt_asymm","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.lt_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.lt_asymm\"><span class=\"name\">UInt64</span>.<span class=\"name\">lt_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toFin_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toFin_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toFin_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_mod","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.val_inj","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.val_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.val_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">val_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toBitVec_inj","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.eq_of_toFin_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_toFin_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_toFin_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">eq_of_toFin_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.lt_iff_toNat_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.lt_iff_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.lt_iff_toNat_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">lt_iff_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ofBitVec_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">64</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_ofNat_of_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNat_of_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_ofNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.mk_toBitVec_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.mk_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.mk_toBitVec_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">mk_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.lt_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.lt_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toUInt8","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt8\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toBitVec_eq_toNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toBitVec_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toBitVec_eq_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toBitVec_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.lt_trans","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.lt_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.lt_trans\"><span class=\"name\">UInt64</span>.<span class=\"name\">lt_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.one_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.one_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">one_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_sub","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_sub\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toFin_inj","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toFin_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.add_def","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.add_def\"><span class=\"name\">UInt64</span>.<span class=\"name\">add_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat.inj","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat.inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.val_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.val_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.val_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">val_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toBitVec","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ofBitVec_toBitVec","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_toBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_mul","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mul\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.eq_of_val_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_val_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_val_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">eq_of_val_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_lt_size","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_lt_size\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toFin_toBitVec","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toFin_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toFin_toBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_div","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_div\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_inj","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.mod_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.mod_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toBitVec_eq_of_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_eq_of_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_antisymm_iff","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_antisymm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_antisymm_iff\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_antisymm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_refl","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_refl\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ofBitVec_toBitVec_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ofBitVec_toBitVec_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_antisymm","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_antisymm\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_ofBitVec","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.ne_of_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.ne_of_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_total","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_total\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.not_lt","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.not_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toBitVec_eq_of_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_eq_of_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.mk_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.mk_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.mk_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">mk_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">64</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toUInt32","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUInt32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.le_iff_toNat_le","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.le_iff_toNat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.le_iff_toNat_le\"><span class=\"name\">UInt64</span>.<span class=\"name\">le_iff_toNat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.val_val_eq_toNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.val_val_eq_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.eq_of_toBitVec_eq","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.eq_of_toBitVec_eq\"><span class=\"name\">UInt64</span>.<span class=\"name\">eq_of_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.lt_irrefl","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.lt_irrefl\"><span class=\"name\">UInt64</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_ofNatCore","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNatCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_ofNatCore\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_ofNatCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toBitVec_ofNat","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">64</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_zero","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toBitVec_ne_of_ne","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_ne_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toBitVec_ne_of_ne\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_ne_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_toUSize","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_toUSize\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_mk","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_mk\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L247-L247","name":"UInt64.toNat_sub_of_le","line":247,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt64.toNat_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt64.toNat_sub_of_le\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_sub_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.val_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.val_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.val_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">val_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_sub_of_le","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_sub_of_le\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_sub_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ofBitVec_toBitVec","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_toBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toUInt64","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt64\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat.inj","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat.inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_total","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_total\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.val_inj","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.val_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.val_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">val_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ofBitVec_toBitVec_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_toBitVec_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.mod_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.mod_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_sub","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_sub\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.eq_of_toFin_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_toFin_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_toFin_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">eq_of_toFin_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_iff_toNat_le","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_iff_toNat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_iff_toNat_le\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_iff_toNat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toFin_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_lt_size","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_lt_size\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_ofBitVec","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.mul_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.mul_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">mul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_ofNatLT","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNatLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNatLT\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_ofNatLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.zero_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.zero_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ofBitVec_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofBitVec_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">32</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_mod","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_ofNatCore","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNatCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNatCore\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_ofNatCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.add_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.add_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">add_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toBitVec_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">32</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.mod_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.mod_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.lt_irrefl","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_irrefl\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toUInt16","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt16\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toBitVec_eq_of_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_eq_of_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.eq_of_val_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_val_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_val_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">eq_of_val_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toFin_val","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_val\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.one_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.one_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">one_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.eq_of_toBitVec_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.eq_of_toBitVec_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">eq_of_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ofNat_one","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_one\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toUInt8","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUInt8\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toBitVec_eq_toNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toBitVec_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toBitVec_eq_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toBitVec_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.lt_trans","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_trans\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_div","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_div\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toBitVec_inj","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ne_of_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ne_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toUSize","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toUSize\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toFin_inj","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.eq_iff_toBitVec_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.eq_iff_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.eq_iff_toBitVec_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">eq_iff_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ne_iff_toBitVec_ne","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ne_iff_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ne_iff_toBitVec_ne\"><span class=\"name\">UInt32</span>.<span class=\"name\">ne_iff_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_trans","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_trans\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_zero","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_ofNat_of_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_ofNat_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_ofNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.mk_ofNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.mk_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.mk_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">mk_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">32</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.not_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.not_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_add","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_add\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_antisymm_iff","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_antisymm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_antisymm_iff\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_antisymm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toBitVec_ne_of_ne","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_ne_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_ne_of_ne\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_ne_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_mod_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mod_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">m</span></span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.lt_iff_toNat_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_iff_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_iff_toNat_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_iff_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_mul","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mul\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_inj","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.modn_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.modn_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.modn_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">modn_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">m</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toFin_toBitVec","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toFin_toBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.lt_asymm","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_asymm\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.lt_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.lt_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toBitVec_eq_of_lt","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toBitVec_eq_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ofNat_toNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ofNat_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_toBitVec","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_toBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.toNat_mk","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.toNat_mk\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_refl","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_refl\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.mk_toBitVec_eq","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.mk_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.mk_toBitVec_eq\"><span class=\"name\">UInt32</span>.<span class=\"name\">mk_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.not_le","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.not_le\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.le_antisymm","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.le_antisymm\"><span class=\"name\">UInt32</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.val_val_eq_toNat","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.val_val_eq_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.sub_def","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.sub_def\"><span class=\"name\">UInt32</span>.<span class=\"name\">sub_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L246-L246","name":"UInt32.ne_of_toBitVec_ne","line":246,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt32.ne_of_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt32.ne_of_toBitVec_ne\"><span class=\"name\">UInt32</span>.<span class=\"name\">ne_of_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ofBitVec_toBitVec","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_toBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.mod_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.mod_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.zero_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.zero_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ne_of_toBitVec_ne","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ne_of_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ne_of_toBitVec_ne\"><span class=\"name\">UInt16</span>.<span class=\"name\">ne_of_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toBitVec_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">16</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ofBitVec_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">16</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.not_le","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.not_le\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_ofNatLT","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNatLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNatLT\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_ofNatLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toBitVec_ne_of_ne","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_ne_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_ne_of_ne\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_ne_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.add_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.add_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">add_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toFin_inj","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toFin_toBitVec","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_toBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_sub_of_le","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_sub_of_le\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_sub_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toBitVec","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.val_val_eq_toNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.val_val_eq_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.eq_of_toBitVec_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_toBitVec_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">eq_of_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_ofNat_of_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNat_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_ofNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat.inj","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat.inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.eq_of_toFin_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_toFin_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_toFin_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">eq_of_toFin_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toBitVec_eq_of_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_eq_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_ofNatCore","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNatCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNatCore\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_ofNatCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.mod_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.mod_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.one_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.one_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">one_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.mk_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.mk_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.mk_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">mk_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">16</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ofNat_one","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_one\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ne_of_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ne_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.modn_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.modn_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.modn_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">modn_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ofNat_toNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofNat_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.mul_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.mul_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">mul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_div","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_div\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_mod_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">m</span></span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.lt_asymm","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.lt_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.lt_asymm\"><span class=\"name\">UInt16</span>.<span class=\"name\">lt_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.eq_of_val_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_val_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.eq_of_val_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">eq_of_val_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ofBitVec_toBitVec_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ofBitVec_toBitVec_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_zero","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toFin_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toBitVec_eq_toNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toBitVec_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toBitVec_eq_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toBitVec_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toUInt64","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt64\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_total","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_total\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_inj","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.lt_iff_toNat_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.lt_iff_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.lt_iff_toNat_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">lt_iff_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toBitVec_inj","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toUSize","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUSize\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.not_lt","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.not_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.eq_iff_toBitVec_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.eq_iff_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.eq_iff_toBitVec_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">eq_iff_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_mk","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mk\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_lt_size","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_lt_size\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_refl","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_refl\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toBitVec_eq_of_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toBitVec_eq_of_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_trans","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_trans\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_ofBitVec","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_ofBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_iff_toNat_le","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_iff_toNat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_iff_toNat_le\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_iff_toNat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.mk_toBitVec_eq","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.mk_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.mk_toBitVec_eq\"><span class=\"name\">UInt16</span>.<span class=\"name\">mk_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toFin_val","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toFin_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toFin_val\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_add","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_add\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.sub_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.sub_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">sub_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_mul","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mul\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_antisymm_iff","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_antisymm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_antisymm_iff\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_antisymm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.lt_irrefl","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.lt_irrefl\"><span class=\"name\">UInt16</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_sub","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_sub\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.ne_iff_toBitVec_ne","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.ne_iff_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.ne_iff_toBitVec_ne\"><span class=\"name\">UInt16</span>.<span class=\"name\">ne_iff_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toUInt32","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.val_ofNat","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.val_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.val_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">val_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.lt_def","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.lt_def\"><span class=\"name\">UInt16</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_mod","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.lt_trans","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.lt_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.lt_trans\"><span class=\"name\">UInt16</span>.<span class=\"name\">lt_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.le_antisymm","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.le_antisymm\"><span class=\"name\">UInt16</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.toNat_toUInt8","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.toNat_toUInt8\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L245-L245","name":"UInt16.val_inj","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt16.val_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt16.val_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">val_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ofBitVec_toBitVec","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_toBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_ofNatLT","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNatLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNatLT\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_ofNatLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.val_val_eq_toNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.val_val_eq_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toUInt16","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt16\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.not_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.not_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_inj","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_lt_size","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_lt_size\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toBitVec_eq_of_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_eq_of_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toUSize","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUSize\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.eq_iff_toBitVec_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.eq_iff_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.eq_iff_toBitVec_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">eq_iff_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toFin_val","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_val\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toFin_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_sub","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_sub\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ofNat_one","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_one\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toBitVec_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">8</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toBitVec","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.eq_of_toFin_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_toFin_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_toFin_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">eq_of_toFin_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_trans","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_trans\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toFin_inj","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ne_of_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ne_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.sub_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.sub_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">sub_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.lt_irrefl","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.lt_irrefl\"><span class=\"name\">UInt8</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toUInt32","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.eq_of_val_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_val_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_val_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">eq_of_val_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_mk","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mk\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_div","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_div\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.modn_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.modn_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.modn_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">modn_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.mk_toBitVec_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.mk_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.mk_toBitVec_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">mk_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_ofNatCore","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNatCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNatCore\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_ofNatCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">n</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_add","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_add\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.lt_asymm","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.lt_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.lt_asymm\"><span class=\"name\">UInt8</span>.<span class=\"name\">lt_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_total","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_total\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_sub_of_le","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_sub_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_sub_of_le\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_sub_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.mk_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.mk_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.mk_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">mk_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">8</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ofBitVec_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><a href=\"./Init/Data/BitVec/BasicAux.html#BitVec.ofNat\">BitVec.ofNat</a> <span class=\"fn\">8</span> <span class=\"fn\">n</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.mul_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.mul_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">mul_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.eq_of_toBitVec_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.eq_of_toBitVec_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">eq_of_toBitVec_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_ofNat_of_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNat_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofNat_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_ofNat_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_refl","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_refl\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.mod_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.mod_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.mod_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">mod_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.lt_trans","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.lt_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.lt_trans\"><span class=\"name\">UInt8</span>.<span class=\"name\">lt_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ofBitVec_toBitVec_eq","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_toBitVec_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofBitVec_toBitVec_eq\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_toBitVec_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ne_iff_toBitVec_ne","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ne_iff_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ne_iff_toBitVec_ne\"><span class=\"name\">UInt8</span>.<span class=\"name\">ne_iff_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_mod","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat.inj","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat.inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_antisymm_iff","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_antisymm_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_antisymm_iff\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_antisymm_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.zero_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.zero_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toBitVec_eq_of_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_eq_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_eq_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_eq_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.lt_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.lt_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.lt_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_zero","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toUInt64","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toUInt64\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.one_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.one_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">one_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.lt_iff_toNat_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.lt_iff_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.lt_iff_toNat_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">lt_iff_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ofNat_toNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ofNat_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.val_inj","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.val_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.val_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">val_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.ne_of_toBitVec_ne","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.ne_of_toBitVec_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.ne_of_toBitVec_ne\"><span class=\"name\">UInt8</span>.<span class=\"name\">ne_of_toBitVec_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_antisymm","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_antisymm\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toBitVec_inj","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_ofBitVec","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_ofBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> }</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.not_le","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.not_le\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_mod_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mod_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> → <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">m</span></span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.val_ofNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.val_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.val_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">val_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.le_iff_toNat_le","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.le_iff_toNat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.le_iff_toNat_le\"><span class=\"name\">UInt8</span>.<span class=\"name\">le_iff_toNat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.mod_lt","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.mod_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">mod_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toBitVec_ne_of_ne","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_ne_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toBitVec_ne_of_ne\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_ne_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_mul","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_mul\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toNat_toBitVec_eq_toNat","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toBitVec_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toNat_toBitVec_eq_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_toBitVec_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.add_def","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.add_def\"><span class=\"name\">UInt8</span>.<span class=\"name\">add_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toBitVec</span> := <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L244-L244","name":"UInt8.toFin_toBitVec","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#UInt8.toFin_toBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span>.<a href=\"./Init/Prelude.html#BitVec.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/UInt/Lemmas.lean#L14-L242","name":"commandDeclare_uint_theorems__","line":14,"kind":"def","docLink":"./Init/Data/UInt/Lemmas.html#commandDeclare_uint_theorems__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Lemmas.html#commandDeclare_uint_theorems__\"><span class=\"name\">commandDeclare_uint_theorems__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}