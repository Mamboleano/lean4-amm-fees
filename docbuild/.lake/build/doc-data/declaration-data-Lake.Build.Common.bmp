{"name":"Lake.Build.Common","instances":[{"typeNames":["Lake.BuildMetadata"],"name":"Lake.instToJsonBuildMetadata","className":"Lean.ToJson"},{"typeNames":["Lake.BuildMetadata"],"name":"Lake.instFromJsonBuildMetadata","className":"Lean.FromJson"}],"imports":["Lake.Config.Monad","Lake.Util.JsonObject","Lake.Build.Actions","Lake.Build.Job"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L423-L434","name":"Lake.computeDynlibOfShared","line":423,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.computeDynlibOfShared","doc":"Construct a `Dynlib` object for a shared library target. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.computeDynlibOfShared\"><span class=\"name\">Lake</span>.<span class=\"name\">computeDynlibOfShared</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sharedLibTarget</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L399-L421","name":"Lake.buildLeanSharedLibOfStatic","line":399,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanSharedLibOfStatic","doc":"Build a shared library from a static library using `leanc`\nusing the Lean toolchain's linker.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanSharedLibOfStatic\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanSharedLibOfStatic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">staticLibJob</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L381-L397","name":"Lake.buildLeanExe","line":381,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanExe","doc":"Build an executable by linking the results of `linkJobs`\nusing the Lean toolchain's linker.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanExe\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanExe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exeFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkJobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sharedLean</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L363-L379","name":"Lake.buildLeanSharedLib","line":363,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanSharedLib","doc":"Build a shared library by linking the results of `linkJobs`\nusing the Lean toolchain's C compiler.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanSharedLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanSharedLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkJobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L354-L361","name":"Lake.buildStaticLib","line":354,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildStaticLib","doc":"Build a static library from object file jobs using the Lean toolchain's `ar`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildStaticLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildStaticLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFileJobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L337-L352","name":"Lake.buildLeanO","line":337,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanO","doc":"Build an object file from a source fie job (i.e, a `lean -c` output)=\nusing the Lean toolchain's C compiler.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">srcJob</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L309-L335","name":"Lake.buildO","line":309,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildO","doc":"Build an object file from a source file job using `compiler`. The invocation is:\n\n```\ncompiler -c -o oFile srcFile weakArgs... traceArgs...\n```\n\nThe `traceArgs` are included as part of the dependency trace hash, whereas\nthe `weakArgs` are not. Thus, system-dependent options like `-I` or `-L` should\nbe `weakArgs` to avoid build artifact incompatibility between systems\n(i.e., a change in the file path should not cause a rebuild).\n\nYou can add more components to the trace via `extraDepTrace`,\nwhich will be computed in the resulting `Job` before building.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">srcJob</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compiler</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <span class=\"fn\">{ <span class=\"fn\">toString</span> := <span class=\"fn\">&quot;cc&quot;</span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L298-L307","name":"Lake.inputFile","line":298,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputFile","doc":"A build job for file that is expected to already exist  (e.g., a data blob or source file).\n\nIf `text := true`, the file is handled as a text file rather than a binary file.\nAny byte difference in a binary file will trigger a rebuild of its dependents.\nIn contrast, text file traces have normalized line endings to avoid unnecessary\nrebuilds across platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L289-L296","name":"Lake.inputTextFile","line":289,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputTextFile","doc":"A build job for text file that is expected to already exist (e.g., a source file).\n\nText file traces have normalized line endings to avoid unnecessary rebuilds across platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputTextFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputTextFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L280-L287","name":"Lake.inputBinFile","line":280,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputBinFile","doc":"A build job for binary file that is expected to already exist (e.g., a data blob).\n\nAny byte difference in a binary file will trigger a rebuild of its dependents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputBinFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L266-L276","name":"Lake.buildFileAfterDepArray","line":266,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepArray","doc":"Build `file` using `build` after `deps` have built if any of their traces change.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepArray\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">deps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L254-L264","name":"Lake.buildFileAfterDepList","line":254,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepList","doc":"Build `file` using `build` after `deps` have built if any of their traces change.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepList\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">deps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L239-L252","name":"Lake.buildFileAfterDep","line":239,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDep","doc":"Build `file` using `build` after `dep` completes if the dependency's\ntrace (and/or `extraDepTrace`) has changed.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDep\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dep</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L231-L237","name":"Lake.buildFileUnlessUpToDate","line":231,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileUnlessUpToDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L209-L229","name":"Lake.buildFileUnlessUpToDate'","line":209,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate'","doc":"Builds `file` using `build` unless it already exists and the current job's\ntrace matches the trace stored in the `.trace` file. If built, save the new\ntrace and cache `file`'s hash in a `.hash` file. Otherwise, try to fetch the\nhash from the `.hash` file using `fetchFileTrace`. Build logs (if any) are\nsaved to the trace file and replayed from there if the build is skipped.\n\nFor example, given `file := \"foo.c\"`, compares `getTrace` with that in\n`foo.c.trace` with the hash cached in `foo.c.hash` and the log cached in\n`foo.c.trace`.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate'\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileUnlessUpToDate'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L200-L207","name":"Lake.fetchFileTrace","line":200,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchFileTrace","doc":"Fetches the trace of a file that may have already have its hash cached\nin a `.hash` file. If no such `.hash` file exists, recomputes and creates it.\n\nIf `text := true`, `file` is hashed as text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchFileTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchFileTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L183-L198","name":"Lake.fetchFileHash","line":183,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchFileHash","doc":"Fetches the hash of a file that may already be cached in a `.hash` file.\nIf hash files are not trusted (e.g., with `--rehash`) or the `.hash` file does\nnot exist, it will be created with a newly computed hash.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L175-L181","name":"Lake.clearFileHash","line":175,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.clearFileHash","doc":"Remove the cached hash of a file (its `.hash` file). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.clearFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">clearFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L168-L173","name":"Lake.cacheFileHash","line":168,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.cacheFileHash","doc":"Computes the hash of a file and saves it to a `.hash` file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.cacheFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">cacheFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L154-L166","name":"Lake.buildUnlessUpToDate","line":154,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate","doc":"Checks whether `info` is up-to-date, and runs `build` to recreate it if not.\nIf rebuilt, saves the new `depTrace` and build log to `traceFile`.\n\nSee `buildUnlessUpToDate?` for more details on how Lake determines whether\n`info` is up-to-date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L143-L152","name":"Lake.buildUnlessUpToDate?.go","line":143,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?.go\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate?</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L105-L152","name":"Lake.buildUnlessUpToDate?","line":105,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?","doc":"Checks whether `info` is up-to-date, and runs `build` to recreate it if not.\nIf rebuilt, saves the new `depTrace` and build log to `traceFile`.\nReturns whether `info` was already up-to-date.\n\n**Up-to-date Checking**\n\nIf `traceFile` exists, checks that the hash in `depTrace` matches that\nof the `traceFile`. If not, and old mode is enabled (e.g., `--old`), falls back\nto the `oldTrace` modification time as the point of comparison.\nIf up-to-date, replay the build log stored in `traceFile`.\n\nIf `traceFile` does not exist, checks that `info` has a newer modification time\nthen `depTrace` / `oldTrace`. No log will be replayed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L88-L103","name":"Lake.checkHashUpToDate","line":88,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.checkHashUpToDate","doc":"Checks if the `info` is up-to-date by comparing `depTrace` with `depHash`.\nIf old mode is enabled (e.g., `--old`), uses the `oldTrace` modification time\nas the point of comparison instead.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.checkHashUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">checkHashUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depHash</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L82-L86","name":"Lake.writeTraceFile","line":82,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.writeTraceFile","doc":"Write persistent trace data to a file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.writeTraceFile\"><span class=\"name\">Lake</span>.<span class=\"name\">writeTraceFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L69-L80","name":"Lake.readTraceFile?","line":69,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.readTraceFile?","doc":"Read persistent trace data from a file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.readTraceFile?\"><span class=\"name\">Lake</span>.<span class=\"name\">readTraceFile?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.LogIO\">LogIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L67-L67","name":"Lake.instFromJsonBuildMetadata","line":67,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instFromJsonBuildMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instFromJsonBuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">instFromJsonBuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L61-L65","name":"Lake.BuildMetadata.fromJson?","line":61,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.fromJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.fromJson?\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">fromJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">json</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L58-L59","name":"Lake.BuildMetadata.ofHash","line":58,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.ofHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.ofHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">ofHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L56-L56","name":"Lake.instToJsonBuildMetadata","line":56,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instToJsonBuildMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instToJsonBuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">instToJsonBuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L55-L55","name":"Lake.BuildMetadata.log","line":55,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.log","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.log\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">log</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L54-L54","name":"Lake.BuildMetadata.depHash","line":54,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.depHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.depHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">depHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L53-L53","name":"Lake.BuildMetadata.mk","line":53,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L49-L56","name":"Lake.BuildMetadata","line":49,"kind":"structure","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata","doc":"The build trace file format,\nwhich stores information about a (successful) build.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L45-L47","name":"Lake.addPureTrace","line":45,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addPureTrace","doc":"Mixes the trace of a pure value into the current job's trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addPureTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addPureTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L41-L43","name":"Lake.addLeanTrace","line":41,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addLeanTrace","doc":"Mixes Lean's trace into the current job's trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addLeanTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addLeanTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L33-L39","name":"Lake.addPlatformTrace","line":33,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addPlatformTrace","doc":"Mixes the platform into the current job's trace.\nIf an artifact includes this trace, it is platform-dependent\nand will be rebuilt on different host platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addPlatformTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addPlatformTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L26-L31","name":"Lake.platformTrace","line":26,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.platformTrace","doc":"Build trace for the host platform.\nIf an artifact includes this trace, it is platform-dependent\nand will be rebuilt on different host platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.platformTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">platformTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/lake/Lake/Build/Common.lean#L23-L24","name":"Lake.noBuildCode","line":23,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.noBuildCode","doc":"Exit code to return if `--no-build` is set and a build is required. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.noBuildCode\"><span class=\"name\">Lake</span>.<span class=\"name\">noBuildCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Exit.html#Lake.ExitCode\">ExitCode</a></div></div>"}]}