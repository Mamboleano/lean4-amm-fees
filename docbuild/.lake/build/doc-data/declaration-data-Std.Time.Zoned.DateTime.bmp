{"name":"Std.Time.Zoned.DateTime","instances":[{"typeNames":["Std.Time.DateTime"],"name":"Std.Time.instBEqDateTime","className":"BEq"},{"typeNames":["Std.Time.DateTime"],"name":"Std.Time.instInhabitedDateTime","className":"Inhabited"},{"typeNames":["Std.Time.DateTime","Std.Time.Day.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Day.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Week.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Week.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_1","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Hour.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_2","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Hour.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_2","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Minute.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_3","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Minute.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_3","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Second.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_4","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Second.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_4","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Millisecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_5","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Millisecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_5","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Nanosecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_6","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Nanosecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_6","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.DateTime","Std.Time.Duration"],"name":"Std.Time.DateTime.instHSubDuration","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Duration","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddDuration","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Duration","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubDuration_1","className":"HSub"}],"imports":["Std.Time.DateTime","Std.Time.Zoned.TimeZone"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L510-L511","name":"Std.Time.DateTime.instHSubDuration_1","line":510,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubDuration_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Duration</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L507-L508","name":"Std.Time.DateTime.instHAddDuration","line":507,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddDuration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Duration</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L504-L505","name":"Std.Time.DateTime.instHSubDuration","line":504,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubDuration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz </span><span class=\"fn\">tz₁</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz₁</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Duration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L501-L502","name":"Std.Time.DateTime.instHSubOffset_6","line":501,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L498-L499","name":"Std.Time.DateTime.instHAddOffset_6","line":498,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L495-L496","name":"Std.Time.DateTime.instHSubOffset_5","line":495,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L492-L493","name":"Std.Time.DateTime.instHAddOffset_5","line":492,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L489-L490","name":"Std.Time.DateTime.instHSubOffset_4","line":489,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L486-L487","name":"Std.Time.DateTime.instHAddOffset_4","line":486,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L483-L484","name":"Std.Time.DateTime.instHSubOffset_3","line":483,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L480-L481","name":"Std.Time.DateTime.instHAddOffset_3","line":480,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L477-L478","name":"Std.Time.DateTime.instHSubOffset_2","line":477,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L474-L475","name":"Std.Time.DateTime.instHAddOffset_2","line":474,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L471-L472","name":"Std.Time.DateTime.instHSubOffset_1","line":471,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L468-L469","name":"Std.Time.DateTime.instHAddOffset_1","line":468,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L465-L466","name":"Std.Time.DateTime.instHSubOffset","line":465,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L462-L463","name":"Std.Time.DateTime.instHAddOffset","line":462,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L455-L460","name":"Std.Time.DateTime.ofDaysSinceUNIXEpoch","line":455,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofDaysSinceUNIXEpoch","doc":"Converts a `DateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L448-L453","name":"Std.Time.DateTime.time","line":448,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.time","doc":"Getter for the `PlainTime` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">time</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zdt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L441-L446","name":"Std.Time.DateTime.quarter","line":441,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.quarter","doc":"Determines the quarter of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">quarter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L432-L439","name":"Std.Time.DateTime.alignedWeekOfMonth","line":432,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.alignedWeekOfMonth","doc":"Determines the week of the month for the given `DateTime`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L426-L430","name":"Std.Time.DateTime.weekOfMonth","line":426,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfMonth","doc":"Returns the unaligned week of the month for a `DateTime` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L419-L424","name":"Std.Time.DateTime.weekOfYear","line":419,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfYear","doc":"Determines the week of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L413-L417","name":"Std.Time.DateTime.dayOfYear","line":413,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.dayOfYear","doc":"Determines the ordinal day of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L407-L411","name":"Std.Time.DateTime.inLeapYear","line":407,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.inLeapYear","doc":"Checks if the `DateTime` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L401-L405","name":"Std.Time.DateTime.withWeekday","line":401,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withWeekday","doc":"Sets the `DateTime` to the specified `desiredWeekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desiredWeekday</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L395-L399","name":"Std.Time.DateTime.era","line":395,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.era","doc":"Determines the era of the given `DateTime` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">era</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L388-L393","name":"Std.Time.DateTime.weekday","line":388,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekday","doc":"Gets the `Weekday` of a DateTime.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekday</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L381-L386","name":"Std.Time.DateTime.nanosecond","line":381,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.nanosecond","doc":"Getter for the `Nanosecond` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.nanosecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">nanosecond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L374-L379","name":"Std.Time.DateTime.millisecond","line":374,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.millisecond","doc":"Getter for the `Milliseconds` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.millisecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">millisecond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L367-L372","name":"Std.Time.DateTime.second","line":367,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.second","doc":"Getter for the `Second` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.second\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">second</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L360-L365","name":"Std.Time.DateTime.minute","line":360,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.minute","doc":"Getter for the `Minute` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.minute\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">minute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L353-L358","name":"Std.Time.DateTime.hour","line":353,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.hour","doc":"Getter for the `Hour` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.hour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">hour</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L346-L351","name":"Std.Time.DateTime.day","line":346,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.day","doc":"Getter for the `Day` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">day</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L339-L344","name":"Std.Time.DateTime.month","line":339,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.month","doc":"Getter for the `Month` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">month</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L332-L337","name":"Std.Time.DateTime.year","line":332,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.year","doc":"Getter for the `Year` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">year</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L325-L330","name":"Std.Time.DateTime.toPlainDateTime","line":325,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toPlainDateTime","doc":"Converts a `Timestamp` to a `PlainDateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toPlainDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L318-L323","name":"Std.Time.DateTime.withMilliseconds","line":318,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMilliseconds","doc":"Creates a new `DateTime tz` by adjusting the `millisecond` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milli</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L311-L316","name":"Std.Time.DateTime.withNanoseconds","line":311,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withNanoseconds","doc":"Creates a new `DateTime tz` by adjusting the `nano` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nano</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L304-L309","name":"Std.Time.DateTime.withSeconds","line":304,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withSeconds","doc":"Creates a new `DateTime tz` by adjusting the `second` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">second</span> : <span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L297-L302","name":"Std.Time.DateTime.withMinutes","line":297,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMinutes","doc":"Creates a new `DateTime tz` by adjusting the `minute` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minute</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L290-L295","name":"Std.Time.DateTime.withHours","line":290,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withHours","doc":"Creates a new `DateTime tz` by adjusting the `hour` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hour</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L282-L288","name":"Std.Time.DateTime.withYearRollOver","line":282,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearRollOver","doc":"Creates a new `DateTime tz` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L274-L280","name":"Std.Time.DateTime.withYearClip","line":274,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearClip","doc":"Creates a new `DateTime tz` by adjusting the year to the given `year` value. The month and day remain unchanged,\nand any invalid days for the new year will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L266-L272","name":"Std.Time.DateTime.withMonthRollOver","line":266,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthRollOver","doc":"Creates a new `DateTime tz` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L258-L264","name":"Std.Time.DateTime.withMonthClip","line":258,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthClip","doc":"Creates a new `DateTime tz` by adjusting the month to the given `month` value.\nThe day remains unchanged, and any invalid days for the new month will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L250-L256","name":"Std.Time.DateTime.withDaysRollOver","line":250,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysRollOver","doc":"Creates a new `DateTime tz` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L242-L248","name":"Std.Time.DateTime.withDaysClip","line":242,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysClip","doc":"Creates a new `DateTime tz` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L235-L240","name":"Std.Time.DateTime.subYearsClip","line":235,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsClip","doc":"Subtract `Year.Offset` from to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L227-L233","name":"Std.Time.DateTime.subYearsRollOver","line":227,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsRollOver","doc":"Subtract `Year.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L220-L225","name":"Std.Time.DateTime.addYearsClip","line":220,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsClip","doc":"Add `Year.Offset` to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L212-L218","name":"Std.Time.DateTime.addYearsRollOver","line":212,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsRollOver","doc":"Add `Year.Offset` to a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L204-L210","name":"Std.Time.DateTime.subMonthsRollOver","line":204,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsRollOver","doc":"Subtract `Month.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L197-L202","name":"Std.Time.DateTime.addMonthsRollOver","line":197,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsRollOver","doc":"Add `Month.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L190-L195","name":"Std.Time.DateTime.subMonthsClip","line":190,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsClip","doc":"Subtracts `Month.Offset` from a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L184-L188","name":"Std.Time.DateTime.addMonthsClip","line":184,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsClip","doc":"Add `Month.Offset` to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L177-L182","name":"Std.Time.DateTime.subWeeks","line":177,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subWeeks","doc":"Subtracts `Week.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L170-L175","name":"Std.Time.DateTime.addWeeks","line":170,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addWeeks","doc":"Add `Week.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L163-L168","name":"Std.Time.DateTime.subDays","line":163,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subDays","doc":"Subtracts `Day.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subDays</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L156-L161","name":"Std.Time.DateTime.addDays","line":156,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addDays","doc":"Add `Day.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addDays</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L149-L154","name":"Std.Time.DateTime.subNanoseconds","line":149,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subNanoseconds","doc":"Subtract `Nanosecond.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanoseconds</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L142-L147","name":"Std.Time.DateTime.addNanoseconds","line":142,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addNanoseconds","doc":"Add `Nanosecond.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanoseconds</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L135-L140","name":"Std.Time.DateTime.subMilliseconds","line":135,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMilliseconds","doc":"Subtract `Millisecond.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L128-L133","name":"Std.Time.DateTime.addMilliseconds","line":128,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMilliseconds","doc":"Add `Millisecond.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L121-L126","name":"Std.Time.DateTime.subSeconds","line":121,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subSeconds","doc":"Subtract `Second.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L114-L119","name":"Std.Time.DateTime.addSeconds","line":114,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addSeconds","doc":"Add `Second.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L107-L112","name":"Std.Time.DateTime.subMinutes","line":107,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMinutes","doc":"Subtract `Minute.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L100-L105","name":"Std.Time.DateTime.addMinutes","line":100,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMinutes","doc":"Add `Minute.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L93-L98","name":"Std.Time.DateTime.subHours","line":93,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subHours","doc":"Subtract `Hour.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L86-L91","name":"Std.Time.DateTime.addHours","line":86,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addHours","doc":"Add `Hour.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L77-L84","name":"Std.Time.DateTime.ofPlainDateTime","line":77,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTime","doc":"Creates a new `DateTime` from a `PlainDateTime`, assuming that the `PlainDateTime`\nis relative to the given `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofPlainDateTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L68-L75","name":"Std.Time.DateTime.ofPlainDateTimeAssumingUTC","line":68,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTimeAssumingUTC","doc":"Creates a new `DateTime` out of a `PlainDateTime`. It assumes that the `PlainDateTime` is relative\nto UTC.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTimeAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofPlainDateTimeAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L61-L66","name":"Std.Time.DateTime.convertTimeZone","line":61,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.convertTimeZone","doc":"Changes the `TimeZone` to a new one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.convertTimeZone\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">convertTimeZone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz₁</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L54-L59","name":"Std.Time.DateTime.toTimestamp","line":54,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toTimestamp","doc":"Creates a `Timestamp` out of a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toTimestamp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L48-L52","name":"Std.Time.DateTime.toDaysSinceUNIXEpoch","line":48,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toDaysSinceUNIXEpoch","doc":"Converts a `DateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L41-L46","name":"Std.Time.DateTime.ofTimestamp","line":41,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofTimestamp","doc":"Creates a new `DateTime` out of a `Timestamp` that is in a `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofTimestamp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L36-L37","name":"Std.Time.instInhabitedDateTime","line":36,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.instInhabitedDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.instInhabitedDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L33-L34","name":"Std.Time.instBEqDateTime","line":33,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.instBEqDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.instBEqDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instBEqDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L31-L31","name":"Std.Time.DateTime.date","line":31,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.date","doc":"`Date` is a `Thunk` containing the `PlainDateTime` that represents the local date and time, it's\nused for accessing data like `day` and `month` without having to recompute the data everytime.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.date\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">date</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L25-L25","name":"Std.Time.DateTime.timestamp","line":25,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.timestamp","doc":"`Timestamp` represents the exact moment in time. It's a UTC related `Timestamp`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.timestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">timestamp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Time/Zoned/DateTime.lean#L16-L31","name":"Std.Time.DateTime","line":16,"kind":"structure","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime","doc":"Represents a specific point in time associated with a `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}