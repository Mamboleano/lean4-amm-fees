{"name":"Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Operations.Mul","instances":[{"typeNames":["Std.Tactic.BVDecide.BVBit","Std.Sat.AIG.BinaryRefVec"],"name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.instLawfulVecOperatorBVBitBinaryRefVecBlast","className":"Std.Sat.AIG.LawfulVecOperator"},{"typeNames":["Std.Tactic.BVDecide.BVBit","Std.Sat.AIG.BinaryRefVec"],"name":"Std.Tactic.BVDecide.BVExpr.bitblast.instLawfulVecOperatorBVBitBinaryRefVecBlastMul","className":"Std.Sat.AIG.LawfulVecOperator"}],"imports":["Std.Tactic.BVDecide.Bitblast.BVExpr.Basic","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Operations.Add","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Operations.ShiftLeft","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Const"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L160-L168","name":"Std.Tactic.BVDecide.BVExpr.bitblast.instLawfulVecOperatorBVBitBinaryRefVecBlastMul","line":160,"kind":"instance","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.instLawfulVecOperatorBVBitBinaryRefVecBlastMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.instLawfulVecOperatorBVBitBinaryRefVecBlastMul\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">instLawfulVecOperatorBVBitBinaryRefVecBlastMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/LawfulVecOperator.html#Std.Sat.AIG.LawfulVecOperator\">Sat.AIG.LawfulVecOperator</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> <a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.BinaryRefVec\">Sat.AIG.BinaryRefVec</a> <span class=\"fn\">fun {<span class=\"fn\">len</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>} =&gt; <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul\">blastMul</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L133-L156","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.instLawfulVecOperatorBVBitBinaryRefVecBlast","line":133,"kind":"instance","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.instLawfulVecOperatorBVBitBinaryRefVecBlast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.instLawfulVecOperatorBVBitBinaryRefVecBlast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span>.<span class=\"name\">instLawfulVecOperatorBVBitBinaryRefVecBlast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/LawfulVecOperator.html#Std.Sat.AIG.LawfulVecOperator\">Sat.AIG.LawfulVecOperator</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> <a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.BinaryRefVec\">Sat.AIG.BinaryRefVec</a> <span class=\"fn\">fun {<span class=\"fn\">len</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>} =&gt; <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.blast\">blast</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L104-L131","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_decl_eq","line":104,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_decl_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_decl_eq\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span>.<span class=\"name\">go_decl_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span> <span class=\"fn\">curr</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span> <span class=\"fn\">curr</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L90-L102","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_le_size","line":90,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_le_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go_le_size\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span>.<span class=\"name\">go_le_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span> <span class=\"fn\">curr</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L56-L86","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go","line":56,"kind":"def","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.go\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry\">Sat.AIG.RefVecEntry</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L37-L54","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.blast","line":37,"kind":"def","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.blast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul.blast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span>.<span class=\"name\">blast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.BinaryRefVec\">BinaryRefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry\">Sat.AIG.RefVecEntry</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.lean#L30-L86","name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastMul","line":30,"kind":"def","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/Mul.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastMul\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.BinaryRefVec\">BinaryRefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry\">Sat.AIG.RefVecEntry</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> <span class=\"fn\">w</span></span></div></div>"}]}