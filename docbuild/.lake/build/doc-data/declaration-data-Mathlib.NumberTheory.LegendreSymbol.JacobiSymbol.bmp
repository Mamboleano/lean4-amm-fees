{"name":"Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol","instances":[],"imports":["Init","Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L472-L478","name":"jacobiSym.mod_right","line":472,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_right","doc":"The Jacobi symbol `J(a | b)` depends only on `b` mod `4*a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mod_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> (<span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>))</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L450-L470","name":"jacobiSym.mod_right'","line":450,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_right'","doc":"The Jacobi symbol `J(a | b)` depends only on `b` mod `4*a` (version for `a : ℕ`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_right'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mod_right'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> (<span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>))</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L442-L448","name":"jacobiSym.quadratic_reciprocity_if","line":442,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_if","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_if\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity_if</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha2</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb2</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L434-L440","name":"jacobiSym.quadratic_reciprocity_three_mod_four","line":434,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_three_mod_four","doc":"The Law of Quadratic Reciprocity for the Jacobi symbol: if `a` and `b` are natural numbers\nboth congruent to `3` mod `4`, then `J(a | b) = -J(b | a)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_three_mod_four\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity_three_mod_four</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L428-L432","name":"jacobiSym.quadratic_reciprocity_one_mod_four'","line":428,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_one_mod_four'","doc":"The Law of Quadratic Reciprocity for the Jacobi symbol: if `a` and `b` are natural numbers\nwith `a` odd and `b % 4 = 1`, then `J(a | b) = J(b | a)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_one_mod_four'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity_one_mod_four'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L421-L426","name":"jacobiSym.quadratic_reciprocity_one_mod_four","line":421,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_one_mod_four","doc":"The Law of Quadratic Reciprocity for the Jacobi symbol: if `a` and `b` are natural numbers\nwith `a % 4 = 1` and `b` odd, then `J(a | b) = J(b | a)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity_one_mod_four\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity_one_mod_four</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L416-L419","name":"jacobiSym.quadratic_reciprocity","line":416,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity","doc":"The Law of Quadratic Reciprocity for the Jacobi symbol "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>)) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L397-L414","name":"jacobiSym.quadratic_reciprocity'","line":397,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity'","doc":"The **Law of Quadratic Reciprocity for the Jacobi symbol**, version with `qrSign` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.quadratic_reciprocity'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">quadratic_reciprocity'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L383-L391","name":"qrSign.eq_iff_eq","line":383,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.eq_iff_eq","doc":"We can move `qrSign m n` from one side of an equality to the other when `m` and `n` are odd. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.eq_iff_eq\"><span class=\"name\">qrSign</span>.<span class=\"name\">eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L379-L381","name":"qrSign.symm","line":379,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.symm","doc":"`qrSign` is symmetric when both arguments are odd. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.symm\"><span class=\"name\">qrSign</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L374-L377","name":"qrSign.mul_right","line":374,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.mul_right","doc":"`qrSign` is multiplicative in the second argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.mul_right\"><span class=\"name\">qrSign</span>.<span class=\"name\">mul_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> (<span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L370-L372","name":"qrSign.mul_left","line":370,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.mul_left","doc":"`qrSign` is multiplicative in the first argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.mul_left\"><span class=\"name\">qrSign</span>.<span class=\"name\">mul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> (<span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m₂</span>) <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L366-L368","name":"qrSign.sq_eq_one","line":366,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.sq_eq_one","doc":"When `m` and `n` are odd, then the square of `qrSign m n` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.sq_eq_one\"><span class=\"name\">qrSign</span>.<span class=\"name\">sq_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L358-L364","name":"qrSign.neg_one_pow","line":358,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.neg_one_pow","doc":"We can express `qrSign m n` as a power of `-1` when `m` and `n` are odd. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign.neg_one_pow\"><span class=\"name\">qrSign</span>.<span class=\"name\">neg_one_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\">qrSign</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L352-L354","name":"qrSign","line":352,"kind":"def","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign","doc":"The bi-multiplicative map giving the sign in the Law of Quadratic Reciprocity "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#qrSign\"><span class=\"name\">qrSign</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L334-L343","name":"jacobiSym.even_odd","line":334,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.even_odd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.even_odd\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">even_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha2</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb2</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>) <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L325-L332","name":"jacobiSym.div_four_left","line":325,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.div_four_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.div_four_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">div_four_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha4</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb2</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">4</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L321-L323","name":"jacobiSym.at_neg_two","line":321,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_neg_two","doc":"If `b` is odd, then `J(-2 | b)` is given by `χ₈' b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_neg_two\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">at_neg_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(-<span class=\"fn\">2</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/ZModChar.html#ZMod.χ₈'\">ZMod.χ₈'</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L317-L319","name":"jacobiSym.at_two","line":317,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_two","doc":"If `b` is odd, then `J(2 | b)` is given by `χ₈ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_two\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">at_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">2</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/ZModChar.html#ZMod.χ₈\">ZMod.χ₈</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L313-L315","name":"jacobiSym.neg","line":313,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.neg","doc":"If `b` is odd, then `J(-a | b) = χ₄ b * J(a | b)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.neg\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/ZModChar.html#ZMod.χ₄\">ZMod.χ₄</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L307-L311","name":"jacobiSym.at_neg_one","line":307,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_neg_one","doc":"If `b` is odd, then `J(-1 | b)` is given by `χ₄ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.at_neg_one\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">at_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/ZModChar.html#ZMod.χ₄\">ZMod.χ₄</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L296-L305","name":"jacobiSym.value_at","line":296,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.value_at","doc":"If `χ` is a multiplicative function such that `J(a | p) = χ p` for all odd primes `p`,\nthen `J(a | b)` equals `χ b` for all odd natural numbers `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.value_at\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">value_at</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">2</span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/Basic.html#legendreSym\">legendreSym</a> <span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L282-L285","name":"ZMod.isSquare_of_jacobiSym_eq_one","line":282,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.isSquare_of_jacobiSym_eq_one","doc":"If `p` is prime and `J(a | p) = 1`, then `a` is a square mod `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.isSquare_of_jacobiSym_eq_one\"><span class=\"name\">ZMod</span>.<span class=\"name\">isSquare_of_jacobiSym_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#IsSquare\">IsSquare</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L276-L280","name":"ZMod.nonsquare_iff_jacobiSym_eq_neg_one","line":276,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.nonsquare_iff_jacobiSym_eq_neg_one","doc":"If `p` is prime, then `J(a | p)` is `-1` iff `a` is not a square modulo `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.nonsquare_iff_jacobiSym_eq_neg_one\"><span class=\"name\">ZMod</span>.<span class=\"name\">nonsquare_iff_jacobiSym_eq_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#IsSquare\">IsSquare</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L268-L274","name":"ZMod.nonsquare_of_jacobiSym_eq_neg_one","line":268,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.nonsquare_of_jacobiSym_eq_neg_one","doc":"If `J(a | b)` is `-1`, then `a` is not a square modulo `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#ZMod.nonsquare_of_jacobiSym_eq_neg_one\"><span class=\"name\">ZMod</span>.<span class=\"name\">nonsquare_of_jacobiSym_eq_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#IsSquare\">IsSquare</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L250-L260","name":"jacobiSym.eq_neg_one_at_prime_divisor_of_eq_neg_one","line":250,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_neg_one_at_prime_divisor_of_eq_neg_one","doc":"If `J(a | n) = -1`, then `n` has a prime divisor `p` such that `J(a | p) = -1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_neg_one_at_prime_divisor_of_eq_neg_one\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">eq_neg_one_at_prime_divisor_of_eq_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L236-L248","name":"jacobiSym.list_prod_right","line":236,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.list_prod_right","doc":"We can pull out a product over a list in the second argument of the Jacobi symbol. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.list_prod_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">list_prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L230-L234","name":"jacobiSym.list_prod_left","line":230,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.list_prod_left","doc":"We can pull out a product over a list in the first argument of the Jacobi symbol. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.list_prod_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">list_prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L223-L228","name":"jacobiSym.prime_dvd_of_eq_neg_one","line":223,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.prime_dvd_of_eq_neg_one","doc":"If `p` is prime, `J(a | p) = -1` and `p` divides `x^2 - a*y^2`, then `p` must divide\n`x` and `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.prime_dvd_of_eq_neg_one\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">prime_dvd_of_eq_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L219-L221","name":"jacobiSym.mod_left'","line":219,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_left'","doc":"The symbol `J(a | b)` depends only on `a` mod `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_left'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mod_left'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a₂</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a₂</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L209-L217","name":"jacobiSym.mod_left","line":209,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_left","doc":"The symbol `J(a | b)` depends only on `a` mod `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mod_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mod_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>) <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L206-L207","name":"jacobiSym.sq_one'","line":206,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.sq_one'","doc":"The symbol `J(a^2 | b)` is `1` when `a` and `b` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.sq_one'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">sq_one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L202-L204","name":"jacobiSym.sq_one","line":202,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.sq_one","doc":"The square of `J(a | b)` is `1` when `a` and `b` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.sq_one\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">sq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L193-L200","name":"jacobiSym.pow_right","line":193,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.pow_right","doc":"We have that `J(a | b^e) = J(a | b)^e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.pow_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">pow_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L188-L191","name":"jacobiSym.pow_left","line":188,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.pow_left","doc":"We have that `J(a^e | b) = J(a | b)^e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.pow_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">pow_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L184-L186","name":"jacobiSym.eq_one_or_neg_one","line":184,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_one_or_neg_one","doc":"The symbol `J(a | b)` takes the value `1` or `-1` if `a` and `b` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_one_or_neg_one\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">eq_one_or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L179-L182","name":"jacobiSym.zero_left","line":179,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.zero_left","doc":"The symbol `J(0 | b)` vanishes when `b > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.zero_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">0</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L171-L177","name":"jacobiSym.eq_zero_iff","line":171,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_zero_iff","doc":"The symbol `J(a | b)` vanishes if and only if `b ≠ 0` and `a` and `b` are not coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_zero_iff\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L164-L169","name":"jacobiSym.ne_zero","line":164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.ne_zero","doc":"The symbol `J(a | b)` is nonzero when `a` and `b` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.ne_zero\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L155-L162","name":"jacobiSym.eq_zero_iff_not_coprime","line":155,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_zero_iff_not_coprime","doc":"The symbol `J(a | b)` vanishes iff `a` and `b` are not coprime (assuming `b ≠ 0`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.eq_zero_iff_not_coprime\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">eq_zero_iff_not_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">b</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L148-L153","name":"jacobiSym.mul_left","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_left","doc":"The Jacobi symbol is multiplicative in its first argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> (<span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₂</span>) <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a₂</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L141-L146","name":"jacobiSym.one_left","line":141,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.one_left","doc":"The symbol `J(1 | b)` has the value `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.one_left\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">1</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L130-L139","name":"jacobiSym.trichotomy","line":130,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.trichotomy","doc":"The Jacobi symbol takes only the values `0`, `1` and `-1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.trichotomy\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">trichotomy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L125-L128","name":"jacobiSym.mul_right","line":125,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_right","doc":"The Jacobi symbol is multiplicative in its second argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mul_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">b₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">b₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> (<span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L116-L123","name":"jacobiSym.mul_right'","line":116,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_right'","doc":"The Jacobi symbol is multiplicative in its second argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.mul_right'\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">mul_right'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb₁</span> : <span class=\"fn\">b₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb₂</span> : <span class=\"fn\">b₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> (<span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L109-L114","name":"jacobiSym.legendreSym.to_jacobiSym","line":109,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.legendreSym.to_jacobiSym","doc":"The Legendre symbol `legendreSym p a` with an integer `a` and a prime number `p`\nis the same as the Jacobi symbol `J(a | p)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.legendreSym.to_jacobiSym\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">legendreSym</span>.<span class=\"name\">to_jacobiSym</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">fp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/Basic.html#legendreSym\">legendreSym</a> <span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L104-L107","name":"jacobiSym.one_right","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.one_right","doc":"The symbol `J(a | 1)` has the value `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.one_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L99-L102","name":"jacobiSym.zero_right","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.zero_right","doc":"The symbol `J(a | 0)` has the value `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym.zero_right\"><span class=\"name\">jacobiSym</span>.<span class=\"name\">zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L87-L88","name":"NumberTheorySymbols.«termJ(_|_)»","line":87,"kind":"def","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#NumberTheorySymbols.«termJ(_|_)»","doc":"The Jacobi symbol of `a` and `b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#NumberTheorySymbols.«termJ(_|_)»\"><span class=\"name\">NumberTheorySymbols</span>.<span class=\"name\">«termJ(_|_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean#L81-L84","name":"jacobiSym","line":81,"kind":"def","docLink":"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym","doc":"The Jacobi symbol of `a` and `b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\"><span class=\"name\">jacobiSym</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"}]}