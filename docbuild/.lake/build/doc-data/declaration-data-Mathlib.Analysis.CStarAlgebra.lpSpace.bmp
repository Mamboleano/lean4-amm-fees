{"name":"Mathlib.Analysis.CStarAlgebra.lpSpace","instances":[{"typeNames":["Subtype"],"name":"instNonUnitalCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","className":"NonUnitalCStarAlgebra"},{"typeNames":["Subtype"],"name":"instNonUnitalCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","className":"NonUnitalCommCStarAlgebra"},{"typeNames":["Subtype"],"name":"instNormedRingSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","className":"NormedRing"},{"typeNames":["Subtype"],"name":"instCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","className":"CommCStarAlgebra"}],"imports":["Init","Mathlib.Analysis.CStarAlgebra.Classes","Mathlib.Analysis.Normed.Lp.lpSpace"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/Analysis/CStarAlgebra/lpSpace.lean#L32-L33","name":"instCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","line":32,"kind":"instance","docLink":"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial\"><span class=\"name\">instCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#CommCStarAlgebra\">CommCStarAlgebra</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#CommCStarAlgebra\">CommCStarAlgebra</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/Analysis/CStarAlgebra/lpSpace.lean#L28-L30","name":"instNormedRingSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","line":28,"kind":"instance","docLink":"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNormedRingSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNormedRingSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial\"><span class=\"name\">instNormedRingSubtypePreLpMemAddSubgroupLpTopENNRealOfNontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#CStarAlgebra\">CStarAlgebra</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Ring/Basic.html#NormedRing\">NormedRing</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/Analysis/CStarAlgebra/lpSpace.lean#L22-L23","name":"instNonUnitalCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","line":22,"kind":"instance","docLink":"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNonUnitalCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNonUnitalCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal\"><span class=\"name\">instNonUnitalCommCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#NonUnitalCommCStarAlgebra\">NonUnitalCommCStarAlgebra</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#NonUnitalCommCStarAlgebra\">NonUnitalCommCStarAlgebra</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/Analysis/CStarAlgebra/lpSpace.lean#L20-L20","name":"instNonUnitalCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","line":20,"kind":"instance","docLink":"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNonUnitalCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/CStarAlgebra/lpSpace.html#instNonUnitalCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal\"><span class=\"name\">instNonUnitalCStarAlgebraSubtypePreLpMemAddSubgroupLpTopENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#NonUnitalCStarAlgebra\">NonUnitalCStarAlgebra</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/CStarAlgebra/Classes.html#NonUnitalCStarAlgebra\">NonUnitalCStarAlgebra</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"}]}