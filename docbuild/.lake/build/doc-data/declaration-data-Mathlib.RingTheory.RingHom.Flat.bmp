{"name":"Mathlib.RingTheory.RingHom.Flat","instances":[],"imports":["Init","Mathlib.RingTheory.Flat.Localization","Mathlib.RingTheory.LocalProperties.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L104-L113","name":"RingHom.Flat.localRingHom","line":104,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.localRingHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.localRingHom\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">localRingHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">â†’+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQP</span> : <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Maps.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#Localization.localRingHom\">Localization.localRingHom</a> <span class=\"fn\">Q</span> <span class=\"fn\">P</span> <span class=\"fn\">f</span> <span class=\"fn\">hQP</span>)</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L91-L102","name":"RingHom.Flat.ofLocalizationPrime","line":91,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.ofLocalizationPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.ofLocalizationPrime\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">ofLocalizationPrime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.OfLocalizationPrime\">OfLocalizationPrime</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L80-L89","name":"RingHom.Flat.propertyIsLocal","line":80,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.propertyIsLocal","doc":"Flat is a local property of ring homomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.propertyIsLocal\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">propertyIsLocal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.PropertyIsLocal\">PropertyIsLocal</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L71-L78","name":"RingHom.Flat.ofLocalizationSpanTarget","line":71,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.ofLocalizationSpanTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.ofLocalizationSpanTarget\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">ofLocalizationSpanTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.OfLocalizationSpanTarget\">OfLocalizationSpanTarget</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L65-L69","name":"RingHom.Flat.holdsForLocalizationAway","line":65,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.holdsForLocalizationAway","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.holdsForLocalizationAway\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">holdsForLocalizationAway</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.HoldsForLocalizationAway\">HoldsForLocalizationAway</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L56-L63","name":"RingHom.Flat.isStableUnderBaseChange","line":56,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.isStableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.isStableUnderBaseChange\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">isStableUnderBaseChange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.IsStableUnderBaseChange\">IsStableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L51-L54","name":"RingHom.Flat.respectsIso","line":51,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.respectsIso\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">respectsIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L47-L49","name":"RingHom.Flat.stableUnderComposition","line":47,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.stableUnderComposition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.stableUnderComposition\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">stableUnderComposition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition\">StableUnderComposition</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L45-L45","name":"RingHom.Flat.containsIdentities","line":45,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.containsIdentities","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.containsIdentities\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">containsIdentities</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.ContainsIdentities\">ContainsIdentities</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L40-L43","name":"RingHom.Flat.of_bijective","line":40,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.of_bijective","doc":"Bijective ring maps are flat. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.of_bijective\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">of_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">â†’+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">â‡‘<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L35-L38","name":"RingHom.Flat.comp","line":35,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.comp","doc":"Composition of flat ring homomorphisms is flat. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.comp\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">â†’+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">â†’+*</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L31-L33","name":"RingHom.Flat.id","line":31,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.id","doc":"The identity of a ring is flat. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat.id\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.id\">RingHom.id</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\">Flat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/RingTheory/RingHom/Flat.lean#L20-L24","name":"RingHom.Flat","line":20,"kind":"def","docLink":"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat","doc":"A ring homomorphism `f : R â†’+* S` is flat if `S` is flat as an `R` module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Flat.html#RingHom.Flat\"><span class=\"name\">RingHom</span>.<span class=\"name\">Flat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">â†’+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}