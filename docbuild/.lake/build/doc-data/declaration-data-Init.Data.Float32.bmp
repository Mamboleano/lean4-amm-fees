{"name":"Init.Data.Float32","instances":[{"typeNames":["Float32"],"name":"instNonemptyFloat32","className":"Nonempty"},{"typeNames":["Float32"],"name":"instAddFloat32","className":"Add"},{"typeNames":["Float32"],"name":"instSubFloat32","className":"Sub"},{"typeNames":["Float32"],"name":"instMulFloat32","className":"Mul"},{"typeNames":["Float32"],"name":"instDivFloat32","className":"Div"},{"typeNames":["Float32"],"name":"instNegFloat32","className":"Neg"},{"typeNames":["Float32"],"name":"instLTFloat32","className":"LT"},{"typeNames":["Float32"],"name":"instLEFloat32","className":"LE"},{"typeNames":["Float32"],"name":"instBEqFloat32","className":"BEq"},{"typeNames":["LT.lt"],"name":"float32DecLt","className":"Decidable"},{"typeNames":["LE.le"],"name":"float32DecLe","className":"Decidable"},{"typeNames":["Float32"],"name":"instToStringFloat32","className":"ToString"},{"typeNames":["Float32"],"name":"instInhabitedFloat32","className":"Inhabited"},{"typeNames":["Float32"],"name":"instReprFloat32","className":"Repr"},{"typeNames":["Float32"],"name":"instReprAtomFloat32","className":"ReprAtom"},{"typeNames":["Float32"],"name":"instHomogeneousPowFloat32","className":"HomogeneousPow"},{"typeNames":["Float32"],"name":"instMinFloat32","className":"Min"},{"typeNames":["Float32"],"name":"instMaxFloat32","className":"Max"}],"imports":["Init.Core","Init.Data.Int.Basic","Init.Data.ToString.Basic","Init.Data.Float"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L197-L197","name":"Float.toFloat32","line":197,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float.toFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float.toFloat32\"><span class=\"name\">Float</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L196-L196","name":"Float32.toFloat","line":196,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toFloat\"><span class=\"name\">Float32</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L190-L194","name":"Float32.scaleB","line":190,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.scaleB","doc":"Efficiently computes `x * 2^i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.scaleB\"><span class=\"name\">Float32</span>.<span class=\"name\">scaleB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L188-L188","name":"instMaxFloat32","line":188,"kind":"instance","docLink":"./Init/Data/Float32.html#instMaxFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instMaxFloat32\"><span class=\"name\">instMaxFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L186-L186","name":"instMinFloat32","line":186,"kind":"instance","docLink":"./Init/Data/Float32.html#instMinFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instMinFloat32\"><span class=\"name\">instMinFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L184-L184","name":"instHomogeneousPowFloat32","line":184,"kind":"instance","docLink":"./Init/Data/Float32.html#instHomogeneousPowFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instHomogeneousPowFloat32\"><span class=\"name\">instHomogeneousPowFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HomogeneousPow\">HomogeneousPow</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L182-L182","name":"Float32.abs","line":182,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.abs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.abs\"><span class=\"name\">Float32</span>.<span class=\"name\">abs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L181-L181","name":"Float32.round","line":181,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.round","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.round\"><span class=\"name\">Float32</span>.<span class=\"name\">round</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L180-L180","name":"Float32.floor","line":180,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.floor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.floor\"><span class=\"name\">Float32</span>.<span class=\"name\">floor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L179-L179","name":"Float32.ceil","line":179,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.ceil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.ceil\"><span class=\"name\">Float32</span>.<span class=\"name\">ceil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L178-L178","name":"Float32.cbrt","line":178,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.cbrt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.cbrt\"><span class=\"name\">Float32</span>.<span class=\"name\">cbrt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L177-L177","name":"Float32.sqrt","line":177,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.sqrt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.sqrt\"><span class=\"name\">Float32</span>.<span class=\"name\">sqrt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L176-L176","name":"Float32.pow","line":176,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.pow\"><span class=\"name\">Float32</span>.<span class=\"name\">pow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L175-L175","name":"Float32.log10","line":175,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.log10","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.log10\"><span class=\"name\">Float32</span>.<span class=\"name\">log10</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L174-L174","name":"Float32.log2","line":174,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.log2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.log2\"><span class=\"name\">Float32</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L173-L173","name":"Float32.log","line":173,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.log","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.log\"><span class=\"name\">Float32</span>.<span class=\"name\">log</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L172-L172","name":"Float32.exp2","line":172,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.exp2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.exp2\"><span class=\"name\">Float32</span>.<span class=\"name\">exp2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L171-L171","name":"Float32.exp","line":171,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.exp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.exp\"><span class=\"name\">Float32</span>.<span class=\"name\">exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L170-L170","name":"Float32.atanh","line":170,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.atanh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.atanh\"><span class=\"name\">Float32</span>.<span class=\"name\">atanh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L169-L169","name":"Float32.acosh","line":169,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.acosh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.acosh\"><span class=\"name\">Float32</span>.<span class=\"name\">acosh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L168-L168","name":"Float32.asinh","line":168,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.asinh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.asinh\"><span class=\"name\">Float32</span>.<span class=\"name\">asinh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L167-L167","name":"Float32.tanh","line":167,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.tanh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.tanh\"><span class=\"name\">Float32</span>.<span class=\"name\">tanh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L166-L166","name":"Float32.cosh","line":166,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.cosh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.cosh\"><span class=\"name\">Float32</span>.<span class=\"name\">cosh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L165-L165","name":"Float32.sinh","line":165,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.sinh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.sinh\"><span class=\"name\">Float32</span>.<span class=\"name\">sinh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L164-L164","name":"Float32.atan2","line":164,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.atan2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.atan2\"><span class=\"name\">Float32</span>.<span class=\"name\">atan2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L163-L163","name":"Float32.atan","line":163,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.atan","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.atan\"><span class=\"name\">Float32</span>.<span class=\"name\">atan</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L162-L162","name":"Float32.acos","line":162,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.acos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.acos\"><span class=\"name\">Float32</span>.<span class=\"name\">acos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L161-L161","name":"Float32.asin","line":161,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.asin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.asin\"><span class=\"name\">Float32</span>.<span class=\"name\">asin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L160-L160","name":"Float32.tan","line":160,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.tan","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.tan\"><span class=\"name\">Float32</span>.<span class=\"name\">tan</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L159-L159","name":"Float32.cos","line":159,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.cos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.cos\"><span class=\"name\">Float32</span>.<span class=\"name\">cos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L158-L158","name":"Float32.sin","line":158,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.sin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.sin\"><span class=\"name\">Float32</span>.<span class=\"name\">sin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L156-L156","name":"instReprAtomFloat32","line":156,"kind":"instance","docLink":"./Init/Data/Float32.html#instReprAtomFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instReprAtomFloat32\"><span class=\"name\">instReprAtomFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#ReprAtom\">ReprAtom</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L153-L154","name":"instReprFloat32","line":153,"kind":"instance","docLink":"./Init/Data/Float32.html#instReprFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instReprFloat32\"><span class=\"name\">instReprFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L150-L151","name":"instInhabitedFloat32","line":150,"kind":"instance","docLink":"./Init/Data/Float32.html#instInhabitedFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instInhabitedFloat32\"><span class=\"name\">instInhabitedFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L144-L148","name":"USize.toFloat32","line":144,"kind":"opaque","docLink":"./Init/Data/Float32.html#USize.toFloat32","doc":"Obtains a `Float32` whose value is near the given `USize`. It will be exactly the value of the\ngiven `USize` if such a `Float32` exists. If no such `Float32` exists, the returned value will either\nbe the smallest `Float32` this is larger than the given value, or the largest `Float32` this is smaller\nthan the given value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#USize.toFloat32\"><span class=\"name\">USize</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L139-L143","name":"UInt64.toFloat32","line":139,"kind":"opaque","docLink":"./Init/Data/Float32.html#UInt64.toFloat32","doc":"Obtains a `Float32` whose value is near the given `UInt64`. It will be exactly the value of the\ngiven `UInt64` if such a `Float32` exists. If no such `Float32` exists, the returned value will either\nbe the smallest `Float32` this is larger than the given value, or the largest `Float32` this is smaller\nthan the given value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#UInt64.toFloat32\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L134-L138","name":"UInt32.toFloat32","line":134,"kind":"opaque","docLink":"./Init/Data/Float32.html#UInt32.toFloat32","doc":"Obtains a `Float32` whose value is near the given `UInt32`. It will be exactly the value of the\ngiven `UInt32` if such a `Float32` exists. If no such `Float32` exists, the returned value will either\nbe the smallest `Float32` this is larger than the given value, or the largest `Float32` this is smaller\nthan the given value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#UInt32.toFloat32\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L132-L133","name":"UInt16.toFloat32","line":132,"kind":"opaque","docLink":"./Init/Data/Float32.html#UInt16.toFloat32","doc":"Obtains the `Float32` whose value is the same as the given `UInt16`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#UInt16.toFloat32\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L130-L131","name":"UInt8.toFloat32","line":130,"kind":"opaque","docLink":"./Init/Data/Float32.html#UInt8.toFloat32","doc":"Obtains the `Float32` whose value is the same as the given `UInt8`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#UInt8.toFloat32\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFloat32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L127-L128","name":"instToStringFloat32","line":127,"kind":"instance","docLink":"./Init/Data/Float32.html#instToStringFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instToStringFloat32\"><span class=\"name\">instToStringFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L121-L125","name":"Float32.frExp","line":121,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.frExp","doc":"Splits the given float `x` into a significand/exponent pair `(s, i)`\nsuch that `x = s * 2^i` where `s ∈ (-1;-0.5] ∪ [0.5; 1)`.\nReturns an undefined value if `x` is not finite.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.frExp\"><span class=\"name\">Float32</span>.<span class=\"name\">frExp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L120-L120","name":"Float32.isInf","line":120,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.isInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.isInf\"><span class=\"name\">Float32</span>.<span class=\"name\">isInf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L119-L119","name":"Float32.isFinite","line":119,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.isFinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.isFinite\"><span class=\"name\">Float32</span>.<span class=\"name\">isFinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L118-L118","name":"Float32.isNaN","line":118,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.isNaN","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.isNaN\"><span class=\"name\">Float32</span>.<span class=\"name\">isNaN</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L111-L116","name":"Float32.toUSize","line":111,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toUSize","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `USize` (including Inf), returns the maximum value of `USize`\n(i.e. `USize.size - 1`). This value is platform dependent).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toUSize\"><span class=\"name\">Float32</span>.<span class=\"name\">toUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L105-L110","name":"Float32.toUInt64","line":105,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toUInt64","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt64` (including Inf), returns the maximum value of `UInt64`\n(i.e. `UInt64.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toUInt64\"><span class=\"name\">Float32</span>.<span class=\"name\">toUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L99-L104","name":"Float32.toUInt32","line":99,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toUInt32","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt32` (including Inf), returns the maximum value of `UInt32`\n(i.e. `UInt32.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toUInt32\"><span class=\"name\">Float32</span>.<span class=\"name\">toUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L93-L98","name":"Float32.toUInt16","line":93,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toUInt16","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt16` (including Inf), returns the maximum value of `UInt16`\n(i.e. `UInt16.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toUInt16\"><span class=\"name\">Float32</span>.<span class=\"name\">toUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L87-L92","name":"Float32.toUInt8","line":87,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toUInt8","doc":"If the given float is non-negative, truncates the value to the nearest non-negative integer.\nIf negative or NaN, returns `0`.\nIf larger than the maximum value for `UInt8` (including Inf), returns the maximum value of `UInt8`\n(i.e. `UInt8.size - 1`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toUInt8\"><span class=\"name\">Float32</span>.<span class=\"name\">toUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L86-L86","name":"Float32.toString","line":86,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toString\"><span class=\"name\">Float32</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L84-L84","name":"float32DecLe","line":84,"kind":"instance","docLink":"./Init/Data/Float32.html#float32DecLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#float32DecLe\"><span class=\"name\">float32DecLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L83-L83","name":"float32DecLt","line":83,"kind":"instance","docLink":"./Init/Data/Float32.html#float32DecLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#float32DecLt\"><span class=\"name\">float32DecLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L79-L81","name":"Float32.decLe","line":79,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.decLe\"><span class=\"name\">Float32</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L75-L77","name":"Float32.decLt","line":75,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.decLt\"><span class=\"name\">Float32</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L73-L73","name":"instBEqFloat32","line":73,"kind":"instance","docLink":"./Init/Data/Float32.html#instBEqFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instBEqFloat32\"><span class=\"name\">instBEqFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L70-L71","name":"Float32.beq","line":70,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.beq","doc":"Note: this is not reflexive since `NaN != NaN`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.beq\"><span class=\"name\">Float32</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L68-L68","name":"instLEFloat32","line":68,"kind":"instance","docLink":"./Init/Data/Float32.html#instLEFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instLEFloat32\"><span class=\"name\">instLEFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L67-L67","name":"instLTFloat32","line":67,"kind":"instance","docLink":"./Init/Data/Float32.html#instLTFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instLTFloat32\"><span class=\"name\">instLTFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L66-L66","name":"instNegFloat32","line":66,"kind":"instance","docLink":"./Init/Data/Float32.html#instNegFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instNegFloat32\"><span class=\"name\">instNegFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L65-L65","name":"instDivFloat32","line":65,"kind":"instance","docLink":"./Init/Data/Float32.html#instDivFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instDivFloat32\"><span class=\"name\">instDivFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L64-L64","name":"instMulFloat32","line":64,"kind":"instance","docLink":"./Init/Data/Float32.html#instMulFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instMulFloat32\"><span class=\"name\">instMulFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L63-L63","name":"instSubFloat32","line":63,"kind":"instance","docLink":"./Init/Data/Float32.html#instSubFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instSubFloat32\"><span class=\"name\">instSubFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L62-L62","name":"instAddFloat32","line":62,"kind":"instance","docLink":"./Init/Data/Float32.html#instAddFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instAddFloat32\"><span class=\"name\">instAddFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L51-L60","name":"Float32.toBits","line":51,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.toBits","doc":"Raw transmutation to `UInt32`.\n\nFloat32s and UInts have the same endianness on all supported platforms.\nIEEE 754 very precisely specifies the bit layout of floats.\n\nNote that this function is distinct from `Float32.toUInt32`, which attempts\nto preserve the numeric value, and not the bitwise value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.toBits\"><span class=\"name\">Float32</span>.<span class=\"name\">toBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L43-L49","name":"Float32.ofBits","line":43,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.ofBits","doc":"Raw transmutation from `UInt32`.\n\nFloat32s and UInts have the same endianness on all supported platforms.\nIEEE 754 very precisely specifies the bit layout of floats.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.ofBits\"><span class=\"name\">Float32</span>.<span class=\"name\">ofBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L40-L41","name":"Float32.le","line":40,"kind":"def","docLink":"./Init/Data/Float32.html#Float32.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.le\"><span class=\"name\">Float32</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L36-L38","name":"Float32.lt","line":36,"kind":"def","docLink":"./Init/Data/Float32.html#Float32.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.lt\"><span class=\"name\">Float32</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L33-L33","name":"Float32.neg","line":33,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.neg\"><span class=\"name\">Float32</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L32-L32","name":"Float32.div","line":32,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.div\"><span class=\"name\">Float32</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L31-L31","name":"Float32.mul","line":31,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.mul\"><span class=\"name\">Float32</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L30-L30","name":"Float32.sub","line":30,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.sub\"><span class=\"name\">Float32</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L29-L29","name":"Float32.add","line":29,"kind":"opaque","docLink":"./Init/Data/Float32.html#Float32.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.add\"><span class=\"name\">Float32</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a> → <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L27-L27","name":"instNonemptyFloat32","line":27,"kind":"instance","docLink":"./Init/Data/Float32.html#instNonemptyFloat32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#instNonemptyFloat32\"><span class=\"name\">instNonemptyFloat32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Init/Data/Float32.html#Float32\">Float32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L25-L25","name":"Float32.val","line":25,"kind":"def","docLink":"./Init/Data/Float32.html#Float32.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.val\"><span class=\"name\">Float32</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Float32.html#Float32\">Float32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float32.html#float32Spec\">float32Spec</a>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L24-L24","name":"Float32.mk","line":24,"kind":"ctor","docLink":"./Init/Data/Float32.html#Float32.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32.mk\"><span class=\"name\">Float32</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Init/Data/Float32.html#float32Spec\">float32Spec</a>.<a href=\"./Init/Data/Float.html#FloatSpec.float\">float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float32.html#Float32\">Float32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L22-L25","name":"Float32","line":22,"kind":"structure","docLink":"./Init/Data/Float32.html#Float32","doc":"Native floating point type, corresponding to the IEEE 754 *binary32* format\n(`float` in C or `f32` in Rust). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#Float32\"><span class=\"name\">Float32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11ccbced796476be020459a83c599b301a765d3e/src/Init/Data/Float32.lean#L13-L20","name":"float32Spec","line":13,"kind":"opaque","docLink":"./Init/Data/Float32.html#float32Spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Float32.html#float32Spec\"><span class=\"name\">float32Spec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#FloatSpec\">FloatSpec</a></div></div>"}]}