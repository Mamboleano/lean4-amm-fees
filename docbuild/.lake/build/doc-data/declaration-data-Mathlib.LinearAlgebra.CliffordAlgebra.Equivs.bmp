{"name":"Mathlib.LinearAlgebra.CliffordAlgebra.Equivs","instances":[{"typeNames":["CliffordAlgebra"],"name":"CliffordAlgebraRing.instCommRingCliffordAlgebraUnitOfNatQuadraticForm","className":"CommRing"},{"typeNames":["CliffordAlgebra"],"name":"CliffordAlgebraComplex.instCommRingCliffordAlgebraRealQ","className":"CommRing"}],"imports":["Init","Mathlib.Algebra.DualNumber","Mathlib.Algebra.QuaternionBasis","Mathlib.Data.Complex.Module","Mathlib.LinearAlgebra.CliffordAlgebra.Conjugation","Mathlib.LinearAlgebra.CliffordAlgebra.Star","Mathlib.LinearAlgebra.QuadraticForm.Prod"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L388-L391","name":"CliffordAlgebraDualNumber.equiv_symm_eps","line":388,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv_symm_eps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv_symm_eps\"><span class=\"name\">CliffordAlgebraDualNumber</span>.<span class=\"name\">equiv_symm_eps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv\">CliffordAlgebraDualNumber.equiv</a>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <a href=\"./Mathlib/Algebra/DualNumber.html#DualNumber.eps\">DualNumber.eps</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L384-L386","name":"CliffordAlgebraDualNumber.equiv_ι","line":384,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv_ι\"><span class=\"name\">CliffordAlgebraDualNumber</span>.<span class=\"name\">equiv_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv\">CliffordAlgebraDualNumber.equiv</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Algebra/DualNumber.html#DualNumber.eps\">DualNumber.eps</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L360-L382","name":"CliffordAlgebraDualNumber.equiv","line":360,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv","doc":"The clifford algebra over a 1-dimensional vector space with 0 quadratic form is isomorphic to\nthe dual numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.equiv\"><span class=\"name\">CliffordAlgebraDualNumber</span>.<span class=\"name\">equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/DualNumber.html#DualNumber\">DualNumber</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L355-L358","name":"CliffordAlgebraDualNumber.ι_mul_ι","line":355,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.ι_mul_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraDualNumber.ι_mul_ι\"><span class=\"name\">CliffordAlgebraDualNumber</span>.<span class=\"name\">ι_mul_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L332-L337","name":"CliffordAlgebraQuaternion.ofQuaternion_star","line":332,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_star","doc":"The quaternion conjugate maps to the \"clifford conjugate\" (aka `star`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_star\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">ofQuaternion_star</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L327-L327","name":"CliffordAlgebraQuaternion.equiv_symm_apply","line":327,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv_symm_apply\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">equiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv\">CliffordAlgebraQuaternion.equiv</a>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L327-L327","name":"CliffordAlgebraQuaternion.equiv_apply","line":327,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv_apply\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">equiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv\">CliffordAlgebraQuaternion.equiv</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L325-L330","name":"CliffordAlgebraQuaternion.equiv","line":325,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv","doc":"The clifford algebra over `CliffordAlgebraQuaternion.Q c₁ c₂` is isomorphic as an `R`-algebra\nto `ℍ[R,c₁,c₂]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.equiv\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L321-L323","name":"CliffordAlgebraQuaternion.toQuaternion_ofQuaternion","line":321,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_ofQuaternion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_ofQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">toQuaternion_ofQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L316-L319","name":"CliffordAlgebraQuaternion.toQuaternion_comp_ofQuaternion","line":316,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_comp_ofQuaternion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_comp_ofQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">toQuaternion_comp_ofQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L311-L314","name":"CliffordAlgebraQuaternion.ofQuaternion_toQuaternion","line":311,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_toQuaternion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_toQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">ofQuaternion_toQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L299-L309","name":"CliffordAlgebraQuaternion.ofQuaternion_comp_toQuaternion","line":299,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_comp_toQuaternion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_comp_toQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">ofQuaternion_comp_toQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L292-L297","name":"CliffordAlgebraQuaternion.ofQuaternion_mk","line":292,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion_mk\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">ofQuaternion_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂ </span><span class=\"fn\">a₃ </span><span class=\"fn\">a₄</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\">ofQuaternion</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">a₁</span>, <span class=\"fn\">imI</span> := <span class=\"fn\">a₂</span>, <span class=\"fn\">imJ</span> := <span class=\"fn\">a₃</span>, <span class=\"fn\">imK</span> := <span class=\"fn\">a₄</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span>)</span> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₂</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\">a₃</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\">a₄</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L288-L290","name":"CliffordAlgebraQuaternion.ofQuaternion","line":288,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion","doc":"Map a quaternion into the clifford algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.ofQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">ofQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L278-L286","name":"CliffordAlgebraQuaternion.toQuaternion_star","line":278,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_star","doc":"The \"clifford conjugate\" maps to the quaternion conjugate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_star\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">toQuaternion_star</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L273-L276","name":"CliffordAlgebraQuaternion.toQuaternion_ι","line":273,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion_ι\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">toQuaternion_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\">toQuaternion</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <span class=\"fn\">v</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">0</span>, <span class=\"fn\">imI</span> := <span class=\"fn\"><span class=\"fn\">v</span>.1</span>, <span class=\"fn\">imJ</span> := <span class=\"fn\"><span class=\"fn\">v</span>.2</span>, <span class=\"fn\">imK</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L262-L271","name":"CliffordAlgebraQuaternion.toQuaternion","line":262,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion","doc":"Intermediate result of `CliffordAlgebraQuaternion.equiv`: clifford algebras over\n`CliffordAlgebraQuaternion.Q` can be converted to `ℍ[R,c₁,c₂]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.toQuaternion\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">toQuaternion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quaternion.html#QuaternionAlgebra\">QuaternionAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L244-L244","name":"CliffordAlgebraQuaternion.quaternionBasis_k","line":244,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_k","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_k\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">quaternionBasis_k</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis\">quaternionBasis</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>.<a href=\"./Mathlib/Algebra/QuaternionBasis.html#QuaternionAlgebra.Basis.k\">k</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L244-L244","name":"CliffordAlgebraQuaternion.quaternionBasis_j","line":244,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_j","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_j\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">quaternionBasis_j</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis\">quaternionBasis</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>.<a href=\"./Mathlib/Algebra/QuaternionBasis.html#QuaternionAlgebra.Basis.j\">j</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L244-L244","name":"CliffordAlgebraQuaternion.quaternionBasis_i","line":244,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_i","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis_i\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">quaternionBasis_i</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis\">quaternionBasis</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>.<a href=\"./Mathlib/Algebra/QuaternionBasis.html#QuaternionAlgebra.Basis.i\">i</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L243-L258","name":"CliffordAlgebraQuaternion.quaternionBasis","line":243,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis","doc":"The quaternion basis vectors within the algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.quaternionBasis\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">quaternionBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/QuaternionBasis.html#QuaternionAlgebra.Basis\">QuaternionAlgebra.Basis</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span>)</span> <span class=\"fn\">c₁</span> <span class=\"fn\">0</span> <span class=\"fn\">c₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L239-L241","name":"CliffordAlgebraQuaternion.Q_apply","line":239,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q_apply\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">Q_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\">Q</a> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">v</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">v</span>.1</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">v</span>.2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">v</span>.2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L234-L237","name":"CliffordAlgebraQuaternion.Q","line":234,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q","doc":"`Q c₁ c₂` is a quadratic form over `R × R` such that `CliffordAlgebra (Q c₁ c₂)` is isomorphic\nas an `R`-algebra to `ℍ[R,c₁,c₂]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraQuaternion.Q\"><span class=\"name\">CliffordAlgebraQuaternion</span>.<span class=\"name\">Q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> (<span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">R</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L212-L216","name":"CliffordAlgebraComplex.ofComplex_conj","line":212,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_conj","doc":"`Complex.conj` is analogous to `CliffordAlgebra.involute`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_conj\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">ofComplex_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.involute\">CliffordAlgebra.involute</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L208-L210","name":"CliffordAlgebraComplex.reverse_eq_id","line":208,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.reverse_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.reverse_eq_id\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">reverse_eq_id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.reverse\">CliffordAlgebra.reverse</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.id\">LinearMap.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L200-L206","name":"CliffordAlgebraComplex.reverse_apply","line":200,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.reverse_apply","doc":"`reverse` is a no-op over `CliffordAlgebraComplex.Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.reverse_apply\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">reverse_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.reverse\">CliffordAlgebra.reverse</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L190-L197","name":"CliffordAlgebraComplex.instCommRingCliffordAlgebraRealQ","line":190,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.instCommRingCliffordAlgebraRealQ","doc":"The clifford algebra is commutative since it is isomorphic to the complex numbers.\n\nTODO: prove this is true for all `CliffordAlgebra`s over a 1-dimensional vector space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.instCommRingCliffordAlgebraRealQ\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">instCommRingCliffordAlgebraRealQ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L186-L186","name":"CliffordAlgebraComplex.equiv_symm_apply","line":186,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv_symm_apply\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">equiv_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv\">CliffordAlgebraComplex.equiv</a>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L186-L186","name":"CliffordAlgebraComplex.equiv_apply","line":186,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv_apply\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">equiv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv\">CliffordAlgebraComplex.equiv</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L185-L188","name":"CliffordAlgebraComplex.equiv","line":185,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv","doc":"The clifford algebras over `CliffordAlgebraComplex.Q` is isomorphic as an `ℝ`-algebra to `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.equiv\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L181-L183","name":"CliffordAlgebraComplex.ofComplex_toComplex","line":181,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_toComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_toComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">ofComplex_toComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L174-L179","name":"CliffordAlgebraComplex.ofComplex_comp_toComplex","line":174,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_comp_toComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_comp_toComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">ofComplex_comp_toComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L170-L172","name":"CliffordAlgebraComplex.toComplex_ofComplex","line":170,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_ofComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_ofComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">toComplex_ofComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L164-L168","name":"CliffordAlgebraComplex.toComplex_comp_ofComplex","line":164,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_comp_ofComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_comp_ofComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">toComplex_comp_ofComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L160-L162","name":"CliffordAlgebraComplex.ofComplex_I","line":160,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex_I\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">ofComplex_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\">ofComplex</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L153-L158","name":"CliffordAlgebraComplex.ofComplex","line":153,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex","doc":"Intermediate result for `CliffordAlgebraComplex.equiv`: `ℂ` can be converted to\n`CliffordAlgebraComplex.Q` above can be converted to. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.ofComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">ofComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L142-L151","name":"CliffordAlgebraComplex.toComplex_involute","line":142,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_involute","doc":"`CliffordAlgebra.involute` is analogous to `Complex.conj`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_involute\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">toComplex_involute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.involute\">CliffordAlgebra.involute</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L138-L140","name":"CliffordAlgebraComplex.toComplex_ι","line":138,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex_ι\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">toComplex_ι</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\">toComplex</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a>)</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L129-L136","name":"CliffordAlgebraComplex.toComplex","line":129,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex","doc":"Intermediate result for `CliffordAlgebraComplex.equiv`: clifford algebras over\n`CliffordAlgebraComplex.Q` above can be converted to `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.toComplex\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">toComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L125-L127","name":"CliffordAlgebraComplex.Q_apply","line":125,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q_apply\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">Q_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\">Q</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L121-L123","name":"CliffordAlgebraComplex.Q","line":121,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q","doc":"The quadratic form sending elements to the negation of their square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraComplex.Q\"><span class=\"name\">CliffordAlgebraComplex</span>.<span class=\"name\">Q</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L104-L110","name":"CliffordAlgebraRing.equiv","line":104,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.equiv","doc":"The clifford algebra over a 0-dimensional vector space is isomorphic to its scalars. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.equiv\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L100-L102","name":"CliffordAlgebraRing.involute_eq_id","line":100,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.involute_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.involute_eq_id\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">involute_eq_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.involute\">CliffordAlgebra.involute</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L95-L98","name":"CliffordAlgebraRing.reverse_eq_id","line":95,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.reverse_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.reverse_eq_id\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">reverse_eq_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.reverse\">CliffordAlgebra.reverse</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.id\">LinearMap.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L87-L93","name":"CliffordAlgebraRing.reverse_apply","line":87,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.reverse_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.reverse_apply\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">reverse_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.html#CliffordAlgebra.reverse\">CliffordAlgebra.reverse</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L76-L84","name":"CliffordAlgebraRing.instCommRingCliffordAlgebraUnitOfNatQuadraticForm","line":76,"kind":"instance","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.instCommRingCliffordAlgebraUnitOfNatQuadraticForm","doc":"Since the vector space is empty the ring is commutative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.instCommRingCliffordAlgebraUnitOfNatQuadraticForm\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">instCommRingCliffordAlgebraUnitOfNatQuadraticForm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/aa936c36e8484abd300577139faf8e945850831a/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean#L72-L74","name":"CliffordAlgebraRing.ι_eq_zero","line":72,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.ι_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.html#CliffordAlgebraRing.ι_eq_zero\"><span class=\"name\">CliffordAlgebraRing</span>.<span class=\"name\">ι_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"}]}